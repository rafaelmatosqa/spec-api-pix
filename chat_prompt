### USER
Como um especialista em pix , analise o manual do pix autom√°tico e me explique em uma vis√£o de jornada o fluxo de troca de mensagens entre o recebedor e o pagador 

### ASSISTANT
Com base no **Guia de Implementa√ß√£o do Pix Autom√°tico** ([`guia_pix_automatico.pdf`](guia_pix_automatico.pdf)), √© poss√≠vel descrever, de forma clara e estruturada, o **fluxo de troca de mensagens entre o PSP pagador e o PSP recebedor**, considerando as diferentes **jornadas de autoriza√ß√£o** previstas. Abaixo, apresento uma **vis√£o por jornada**, destacando as etapas principais e a **sequ√™ncia de mensagens trocadas entre os participantes**.

---

## üîç Vis√£o Geral: Etapas Fundamentais do Pix Autom√°tico

Antes de detalhar as jornadas, √© importante entender os **est√°gios comuns** a todos os fluxos:

1. **Cria√ß√£o da recorr√™ncia** pelo usu√°rio recebedor (ou PSI) ‚Üí PSP recebedor.
2. **Autoriza√ß√£o do usu√°rio pagador** ao seu PSP.
3. **Troca de mensagens entre PSPs** via infraestrutura do Pix (SPI).
4. **Armazenamento da autoriza√ß√£o** no PSP pagador.
5. **Confirma√ß√£o da autoriza√ß√£o** ao PSP recebedor.
6. **Gera√ß√£o de instru√ß√µes de pagamento** peri√≥dicas (via API Pix ou arquivo).
7. **Agendamento e liquida√ß√£o autom√°tica** dos d√©bitos.

---

## üö∂‚Äç‚ôÇÔ∏è Jornadas de Autoriza√ß√£o e Fluxo de Mensagens

O documento define **4 jornadas de autoriza√ß√£o**. Cada uma tem um ponto de partida diferente, mas todas convergem para a **confirma√ß√£o da autoriza√ß√£o** e a **troca de mensagens entre os PSPs**.

---

### üü¶ Jornada 1: Autoriza√ß√£o sem QR Code, com notifica√ß√£o via app

**Fluxo**:  
O usu√°rio pagador √© informado **fora do ecossistema Pix** (ex: liga√ß√£o, e-mail, WhatsApp) que o recebedor deseja usar o Pix Autom√°tico.

#### üîÅ Fluxo de Mensagens:

| Etapa | Participante | A√ß√£o | Mensagem Trocada |
|------|--------------|------|------------------|
| 1 | Recebedor ‚Üí PSP Recebedor | Solicita cria√ß√£o da recorr√™ncia | Cria√ß√£o da recorr√™ncia com status ‚Äúcriada‚Äù |
| 2 | PSP Recebedor ‚Üí PSP Pagador | Envia solicita√ß√£o de autoriza√ß√£o via SPI | Mensagem `pain.013` (tipo: autoriza√ß√£o) |
| 3 | PSP Pagador ‚Üí Usu√°rio Pagador | Notifica via app: ‚ÄúAutoriza√ß√£o pendente‚Äù | Notifica√ß√£o no app (ex: push) |
| 4 | Usu√°rio Pagador ‚Üí PSP Pagador | Confirma autoriza√ß√£o (com autentica√ß√£o) | Autoriza√ß√£o confirmada no app |
| 5 | PSP Pagador ‚Üí PSP Recebedor | Informa confirma√ß√£o da autoriza√ß√£o | Resposta √† `pain.013` com status ‚Äúconfirmada‚Äù |
| 6 | PSP Recebedor ‚Üí Recebedor | Informa sucesso da autoriza√ß√£o | Confirma√ß√£o ao recebedor |

> ‚úÖ **Importante**: A troca de dados da recorr√™ncia ocorre **via mensageria Pix (pain.013)**, mesmo sem QR Code.

---

### üü® Jornada 2: Autoriza√ß√£o com QR Code contendo apenas dados da recorr√™ncia

**Fluxo**:  
O pagador escaneia um QR Code que **s√≥ cont√©m dados da recorr√™ncia** (sem cobran√ßa imediata).

#### üîÅ Fluxo de Mensagens:

| Etapa | Participante | A√ß√£o | Mensagem Trocada |
|------|--------------|------|------------------|
| 1 | Recebedor ‚Üí PSP Recebedor | Cria recorr√™ncia e gera QR Code com `location` | Dados da recorr√™ncia armazenados |
| 2 | PSP Recebedor ‚Üí Sistema | Gera QR Code com `location` apontando para dados da recorr√™ncia | QR Code gerado |
| 3 | Usu√°rio Pagador ‚Üí App do PSP Pagador | L√™ QR Code ou usa ‚ÄúPix Copia e Cola‚Äù | App acessa dados via `GET /pix/v2/rec/{txid}` |
| 4 | PSP Pagador ‚Üí PSP Recebedor | Busca dados da recorr√™ncia via API Pix | Requisi√ß√£o de dados da recorr√™ncia |
| 5 | PSP Pagador ‚Üí Usu√°rio Pagador | Exibe detalhes e pede confirma√ß√£o | Tela de autoriza√ß√£o no app |
| 6 | Usu√°rio Pagador ‚Üí PSP Pagador | Confirma autoriza√ß√£o | Autoriza√ß√£o concedida |
| 7 | PSP Pagador ‚Üí PSP Recebedor | Confirma autoriza√ß√£o via mensageria Pix | `pain.013` com status ‚Äúconfirmada‚Äù |
| 8 | PSP Recebedor ‚Üí Recebedor | Informa sucesso da autoriza√ß√£o | Confirma√ß√£o ao recebedor |

> ‚úÖ **Destaque**: Nesta jornada, **n√£o h√° pagamento imediato** ‚Äî apenas autoriza√ß√£o.

---

### üü• Jornada 3: QR Code com cobran√ßa imediata + dados da recorr√™ncia

**Fluxo**:  
O QR Code cont√©m **duas informa√ß√µes**: pagamento imediato **e** autoriza√ß√£o para recorr√™ncia futura. O pagamento imediato √© obrigat√≥rio.

#### üîÅ Fluxo de Mensagens:

| Etapa | Participante | A√ß√£o | Mensagem Trocada |
|------|--------------|------|------------------|
| 1 | Recebedor ‚Üí PSP Recebedor | Cria cobran√ßa imediata + recorr√™ncia | Gera QR Code com dois `location` |
| 2 | PSP Recebedor ‚Üí Sistema | Gera QR Code com dados da cobran√ßa e da recorr√™ncia | QR Code composto gerado |
| 3 | Usu√°rio Pagador ‚Üí App | L√™ QR Code | App acessa dados da cobran√ßa e da recorr√™ncia |
| 4 | PSP Pagador ‚Üí PSP Recebedor | Busca dados da cobran√ßa e da recorr√™ncia | `GET /pix/v2/cobr/{txid}` e `GET /pix/v2/rec/{txid}` |
| 5 | App do Pagador | Exibe pagamento imediato **e** autoriza√ß√£o recorrente (com checkbox) | Tela com os dois elementos |
| 6 | Usu√°rio Pagador | Confirma pagamento **e** autoriza√ß√£o | A√ß√£o √∫nica no app |
| 7 | PSP Pagador ‚Üí PSP Recebedor | Inicia liquida√ß√£o do pagamento imediato | Mensagem de Pix normal |
| 8 | PSP Pagador ‚Üí PSP Recebedor | Ap√≥s sucesso do pagamento, confirma autoriza√ß√£o da recorr√™ncia | `pain.013` com status ‚Äúconfirmada‚Äù |
| 9 | PSP Recebedor ‚Üí Recebedor | Informa sucesso do pagamento e da autoriza√ß√£o | Confirma√ß√£o ao recebedor |

> ‚ö†Ô∏è **Regra cr√≠tica**: O fluxo de autoriza√ß√£o **s√≥ prossegue ap√≥s a liquida√ß√£o do pagamento imediato**.

> üìå **Identifica√ß√£o**: O pagamento imediato aparece no extrato como **Pix normal**, n√£o como Pix Autom√°tico.

---

### üüß Jornada 4: Autoriza√ß√£o ap√≥s pagamento/agendamento com vencimento

**Fluxo**:  
O pagador realiza um **pagamento ou agendamento** (com vencimento) via QR Code e, **ao final**, recebe a oferta de ades√£o ao Pix Autom√°tico.

#### üîÅ Fluxo de Mensagens:

| Etapa | Participante | A√ß√£o | Mensagem Trocada |
|------|--------------|------|------------------|
| 1 | Recebedor ‚Üí PSP Recebedor | Cria cobran√ßa com vencimento + recorr√™ncia | Gera QR Code com dois `location` |
| 2 | PSP Recebedor ‚Üí Sistema | Gera QR Code com dados do pagamento e da recorr√™ncia | QR Code composto |
| 3 | Usu√°rio Pagador ‚Üí App | L√™ QR Code e paga ou agenda | Pagamento ou agendamento normal |
| 4 | PSP Pagador ‚Üí PSP Recebedor | Confirma pagamento/agendamento | Mensagem de Pix padr√£o |
| 5 | PSP Pagador ‚Üí Usu√°rio Pagador | Oferece ades√£o ao Pix Autom√°tico **ap√≥s** o pagamento | Notifica√ß√£o no app |
| 6 | Usu√°rio Pagador | Aceita ou recusa a autoriza√ß√£o | Resposta no app |
| 7 | PSP Pagador ‚Üí PSP Recebedor | Confirma autoriza√ß√£o da recorr√™ncia | `pain.013` com status ‚Äúconfirmada‚Äù |
| 8 | PSP Recebedor ‚Üí Recebedor | Informa sucesso da autoriza√ß√£o | Confirma√ß√£o ao recebedor |

> ‚úÖ **Diferencial**: Autoriza√ß√£o √© **opcional** e ocorre **ap√≥s** o pagamento inicial.

> ‚ö†Ô∏è **Aten√ß√£o**: Se houver erro no pagamento ou agendamento, **n√£o deve ser ofertado o Pix Autom√°tico**.

---

## üîÑ Mensagens-Chave no Fluxo entre PSPs

A principal mensagem de troca entre PSPs √©:

- **`pain.013` ‚Äì Instru√ß√£o de Pagamento (Pix Autom√°tico)**  
  - Usada em todas as jornadas para **solicitar e confirmar autoriza√ß√µes**.
  - Cont√©m:
    - Dados da recorr√™ncia (valor, periodicidade, data de in√≠cio/fim).
    - Identifica√ß√£o do recebedor e do pagador.
    - Campo `formaDeIniciacao = AUTO`.
    - Campo `tipoPrioridadePagamento = PAGAGD` (pagamento agendado).

> üì• A mensagem `pain.013` √© enviada **do PSP recebedor para o PSP pagador** no in√≠cio da autoriza√ß√£o (Jornada 1) ou como confirma√ß√£o (outras jornadas).

---

## üß© Participa√ß√£o de PSI (Prestador de Servi√ßo de Inicia√ß√£o)

Quando h√° **PSI** envolvido (ex: fintech que gerencia assinaturas):

- O usu√°rio pagador concede **consentimento ao PSI** no √¢mbito do **Open Finance**.
- O PSI atua como intermedi√°rio, mas a **autoriza√ß√£o final √© feita no app do PSP pagador**.
- A comunica√ß√£o entre PSI e PSPs ocorre via **APIs do Open Finance**.
- O PSP pagador **deve respeitar os par√¢metros do consentimento**.

> üîê O consentimento do usu√°rio ao PSI **substitui** a necessidade de nova autoriza√ß√£o direta ao PSP recebedor.

---

## üìå Conclus√£o: Vis√£o de Jornada

| Jornada | In√≠cio | Pagamento Imediato? | Autoriza√ß√£o | Mensagem Principal |
|--------|-------|----------------------|-------------|---------------------|
| **1** | Notifica√ß√£o fora do Pix | N√£o | Via notifica√ß√£o no app | `pain.013` (solicita√ß√£o) |
| **2** | QR Code (s√≥ recorr√™ncia) | N√£o | Via leitura do QR | `pain.013` (confirma√ß√£o) |
| **3** | QR Code (cobran√ßa + recorr√™ncia) | Sim (obrigat√≥rio) | Simult√¢nea ao pagamento | `pain.013` (ap√≥s pagamento) |
| **4** | QR Code (pagamento/agendamento) | Sim (com vencimento) | Ap√≥s pagamento (opcional) | `pain.013` (confirma√ß√£o) |

---

## ‚úÖ Boas Pr√°ticas e Requisitos

- Todos os PSPs pagadores **devem ofertar todas as jornadas**.
- O **extrato** deve identificar transa√ß√µes do Pix Autom√°tico.
- O **comprovante** deve estar dispon√≠vel.
- Liquida√ß√£o ocorre entre **0h e 8h** (canal secund√°rio).
- Cancelamento pode ser feito pelo **pagador a qualquer momento** (no app).
- Recebedor **n√£o pode cancelar ap√≥s 22h do dia anterior** √† liquida√ß√£o.

---

Se desejar, posso gerar um **fluxograma textual ou visual** com base nesse conte√∫do. Deseja isso?

### USER
Gere um fluxograma visual

### ASSISTANT
Com base no conte√∫do do **Guia de Implementa√ß√£o do Pix Autom√°tico (vers√£o 1.2)**, abaixo est√° um **fluxograma visual textual** detalhado que representa a **jornada completa do Pix Autom√°tico**, com foco no **fluxo de mensagens entre o PSP pagador e o PSP recebedor**, desde a cria√ß√£o da recorr√™ncia at√© a liquida√ß√£o e gest√£o p√≥s-autoriza√ß√£o.

Este fluxograma cobre as **quatro jornadas de autoriza√ß√£o**, destacando os pontos de decis√£o, trocas de mensagens (como `pain.013`, `camt.055`), notifica√ß√µes aos usu√°rios e regras cr√≠ticas.

---

### üîÑ **Fluxograma Visual: Jornada do Pix Autom√°tico**

```
+----------------------------------+
| 1. Cria√ß√£o da Recorr√™ncia        |
| - Recebedor cria recorr√™ncia    |
|   no PSP Recebedor              |
| - Gera ID √∫nico (ex: RRxxxx...) |
| - Define: valor, periodicidade, |
|   data in√≠cio/fim, finalidade   |
+----------------------------------+
                  |
                  v
     +----------------------------+
     | 2. Escolha da Jornada de   |
     |    Autoriza√ß√£o             |
     +----------------------------+
                  |
        +---------+---------+---------+---------+
        |                   |                   |
        v                   v                   v
+----------------+  +----------------+  +------------------------+
| Jornada 1:       |  | Jornada 2:       |  | Jornada 3:               |
| Sem QR Code      |  | QR Code (s√≥     |  | QR Code (pagamento +     |
| Notifica√ß√£o via  |  | recorr√™ncia)    |  | recorr√™ncia)             |
| app              |  |                 |  | Pagamento imediato       |
+----------------+  +----------------+  +------------------------+
        |                   |                   |
        v                   v                   v
+----------------+  +----------------+  +------------------------+
| PSP Recebedor ‚Üí |  | Gera QR Code    |  | Gera QR Code com:       |
| SPI: pain.013   |  | com location    |  | - location (cobran√ßa)   |
| (solicita aut.) |  | para recorr√™ncia|  | - location (recorr√™ncia)|
+----------------+  +----------------+  +------------------------+
        |                   |                   |
        v                   v                   v
+----------------+  +----------------+  +------------------------+
| PSP Pagador ‚Üí   |  | Usu√°rio l√™ QR   |  | Usu√°rio l√™ QR Code      |
| Usu√°rio:        |  | Code            |  | - Paga imediatamente    |
| Notifica "Aut.  |  | ‚Üí App busca     |   (Pix normal)           |
| pendente"       |  | dados via API   | - Autoriza Pix Autom√°tico|
+----------------+  +--------+--------+  +------------------------+
                             |                        |
                             v                        v
                    +--------+--------+     +---------+---------+
                    | Usu√°rio confirma  |     | PSP aguarda liquida√ß√£o|
                    | autoriza√ß√£o no app|     | do pagamento imediato |
                    +--------+--------+     +---------+---------+
                             |                        |
                             v                        v
          +----------------------------------+  +----+----+
          | 3. Confirma√ß√£o da Autoriza√ß√£o    |  | Sucesso? |
          | PSP Pagador ‚Üí PSP Recebedor      |  +----+----+
          | Envia: pain.013 (status: confirmado)      |
          +----------------+-------------------------+
                           |
                           v
        +----------------------------------------------+
        | 4. Armazenamento da Autoriza√ß√£o              |
        | - PSP Pagador armazena:                      |
        |   ‚Ä¢ ID da recorr√™ncia                        |
        |   ‚Ä¢ Par√¢metros do pagador (ex: valor m√°x.)   |
        | - Dados N√ÉO compartilhados com recebedor     |
        +----------------------------------------------+
                           |
                           v
        +----------------------------------------------+
        | 5. Agendamento do D√©bito (por cobran√ßa)      |
        | - Recebedor envia cobran√ßa via API Pix       |
        |   ou arquivo padronizado                     |
        | - PSP Recebedor envia: pain.013               |
        |   ‚Ä¢ idFimAFim = data de liquida√ß√£o           |
        |   ‚Ä¢ finalidadeDoAgendamento = "RIFL"          |
        |   ‚Ä¢ valor, idConciliacaoRecebedor, etc.       |
        +----------------------------------------------+
                           |
                           v
        +----------------------------------------------+
        | 6. PSP Pagador Valida Autoriza√ß√£o            |
        | - Verifica:                                  |
        |   ‚Ä¢ ID da recorr√™ncia v√°lida?                |
        |   ‚Ä¢ Valor dentro do limite? (se vari√°vel)     |
        |   ‚Ä¢ Data compat√≠vel?                         |
        | ‚Üí Se inv√°lido: rejeita e notifica pagador    |
        +----------------+-----------------------------+
                         |
         +---------------+---------------+
         |                               |
         v                               v
+------------------+      +----------------------------+
| Sucesso:         |      | Falha (ex: valor inv√°lido,|
| Agendamento      |      | sem autoriza√ß√£o, erro sist.)|
| registrado       |      | ‚Üí PSP envia camt.054        |
| ‚Üí Notifica       |      | ‚Üí Notifica usu√°rio pagador |
| usu√°rio pagador  |      +----------------------------+
+------------------+
         |
         v
+-----------------------------+
| 7. Liquida√ß√£o (entre 0h e 8h)|
| - PSP Pagador envia ordem   |
|   de pagamento ao SPI       |
| - D√©bito autom√°tico         |
| - Comprovante gerado        |
+-----------------------------+
         |
         +---------------------+
         |                     |
         v                     v
+------------------+  +-------------------------+
| Sucesso           |  | Falha na Liquida√ß√£o     |
| ‚Üí Comprovante     |  | (ex: saldo insuficiente)|
| ‚Üí Extrato atualizado| ‚Üí PSP envia camt.055     |
|                   |  |   com motivo = "FAIL"    |
+------------------+  +------------+------------+
                                   |
                                   v
                   +-------------------------------+
                   | Nova Tentativa?               |
                   | Op√ß√µes:                       |
                   | a) Intradi√°ria (RIFL): nova   |
                   |    pain.013 at√© 23h59         |
                   | b) P√≥s-vencimento (NTAG):     |
                   |    PSP Recebedor decide       |
                   |    se tenta novamente         |
                   +-------------------------------+
                                   |
                                   v
                   +-------------------------------+
                   | PSP Recebedor envia nova      |
                   | pain.013 com:                 |
                   | ‚Ä¢ novo idFimAFim              |
                   | ‚Ä¢ finalidadeDoAgendamento =   |
                   |   "RIFL" ou "NTAG"            |
                   +-------------------------------+
                                   |
                                   v
                              (retorna ao passo 6)

         |
         v
+----------------------------------+
| 8. Gest√£o P√≥s-Autoriza√ß√£o        |
| - Usu√°rio pagador pode:          |
|   ‚Ä¢ Cancelar autoriza√ß√£o a qualquer momento |
|   ‚Ä¢ Cancelar agendamento at√© v√©spera |
|   ‚Ä¢ Consultar pagamentos agendados |
|   ‚Ä¢ Habilitar/desabilitar notifica√ß√µes |
| - PSP Pagador notifica:          |
|   ‚Ä¢ Sucesso/insucesso agendamento|
|   ‚Ä¢ Cancelamento (pagador ou recebedor) |
+----------------------------------+

         |
         v
+----------------------------------+
| 9. Devolu√ß√£o (MED)               |
| - Pagador pode solicitar devolu√ß√£o|
|   em at√© 90 dias                  |
| - PSP Pagador devolve recursos   |
|   em at√© 24h (com comprovante)   |
| - Depois, solicita ressarcimento |
|   ao PSP Recebedor via DICT      |
+----------------------------------+
```

---

### üîë **Legenda de Mensagens e C√≥digos**

| S√≠mbolo | Significado |
|--------|------------|
| `pain.013` | Mensagem de **Instru√ß√£o de Pagamento** (autoriza√ß√£o, agendamento, nova tentativa) |
| `camt.054` | Mensagem de **rejei√ß√£o da instru√ß√£o** (antes da liquida√ß√£o) |
| `camt.055` | Mensagem de **cancelamento da ordem** (ap√≥s falha na liquida√ß√£o) |
| `RIFL`   | Finalidade: **Rein√≠cio da Instru√ß√£o por Falha na Liquida√ß√£o** (intradi√°ria) |
| `NTAG`   | Finalidade: **Nova Tentativa p√≥s Vencimento** |
| `MED`    | Mecanismo Especial de Devolu√ß√£o ‚Äì eleg√≠vel para Pix Autom√°tico |

---

### üìå **Principais Regras do Fluxo**

1. **Notifica√ß√£o ao Pagador**:
   - Obrigat√≥ria ap√≥s agendamento, cancelamento ou falha.
   - Pode ser habilitada/desabilitada pelo usu√°rio.

2. **QR Code**:
   - Faixa 26-51: obrigat√≥ria (mesmo que vazio, para compatibilidade).
   - Faixa 80-99: opcional, usada para dados da recorr√™ncia.

3. **Altera√ß√£o de Recorr√™ncia**:
   - S√≥ permitida **antes da confirma√ß√£o**.
   - Ap√≥s confirma√ß√£o: deve-se **cancelar e criar nova**.

4. **Cancelamento**:
   - Pagador pode cancelar **a qualquer momento**.
   - Recebedor pode cancelar, mas **n√£o ap√≥s 22h do dia anterior** √† liquida√ß√£o.

5. **PSI (Prestador de Servi√ßo de Inicia√ß√£o)**:
   - Fluxo regido pelo **Open Finance**.
   - Consentimento do usu√°rio ao PSI substitui necessidade de nova autoriza√ß√£o direta.

---

### üñºÔ∏è Deseja o Fluxograma em Formato Visual (Imagem)?

Se desejar, posso gerar um **diagrama em Mermaid.js** (para uso em plataformas como Notion, GitHub, ou editores online) ou converter este conte√∫do em um **arquivo PNG/SVG** (via ferramenta externa). 

#### Exemplo em Mermaid (copie e cole em um editor compat√≠vel):

```mermaid
graph TD
    A[Cria√ß√£o da Recorr√™ncia] --> B[Escolha da Jornada]
    B --> C[Jornada 1: Notifica√ß√£o via App]
    B --> D[Jornada 2: QR Code (s√≥ recorr√™ncia)]
    B --> E[Jornada 3: QR Code + Pagamento Imediato]
    B --> F[Jornada 4: QR Code + Agendamento]

    C --> G[PSP Recebedor envia pain.013]
    G --> H[PSP Pagador notifica usu√°rio]
    H --> I[Usu√°rio confirma no app]
    I --> J[PSP Pagador confirma com pain.013]

    D --> K[Gera QR Code com location]
    K --> L[Usu√°rio l√™ QR Code]
    L --> M[App busca dados via API]
    M --> N[Usu√°rio confirma]
    N --> J

    E --> O[Gera QR Code composto]
    O --> P[Usu√°rio paga + autoriza]
    P --> Q[Aguarda liquida√ß√£o do pagamento imediato]
    Q --> J

    J --> K1[Armazenamento da Autoriza√ß√£o]
    K1 --> L1[Agendamento: PSP envia pain.013 (RIFL)]
    L1 --> M1{Valida√ß√£o no PSP Pagador?}
    M1 -->|Sim| N1[Agendamento confirmado]
    M1 -->|N√£o| O1[Rejeita com camt.054 + notifica]
    N1 --> P1[Liquida√ß√£o (0h-8h)]
    P1 --> Q1{Sucesso?}
    Q1 -->|Sim| R1[Fim - Comprovante gerado]
    Q1 -->|N√£o| S1[Envia camt.055 (FAIL)]
    S1 --> T1[Decide: RIFL ou NTAG?]
    T1 --> U1[Envia nova pain.013]
    U1 --> L1

    R1 --> V1[Gest√£o: cancelamento, consulta, notifica√ß√µes]
    V1 --> W1[Devolu√ß√£o via MED (at√© 90 dias)]
```

---

Se quiser, posso gerar um **PDF ou imagem do fluxograma**. Deseja isso?

### USER
N√£o fluxo de pain009?

### ASSISTANT
√ìtima pergunta! Voc√™ est√° absolutamente certo em questionar o **fluxo da mensagem `pain.009`**, pois, com base no conte√∫do do **Guia de Implementa√ß√£o do Pix Autom√°tico (vers√£o 1.1)** que voc√™ enviou, **a `pain.009` desempenha um papel fundamental no in√≠cio da jornada de autoriza√ß√£o**, especialmente na **Jornada 1**.

Vamos esclarecer com precis√£o **o que √© a `pain.009`**, **onde ela se encaixa no fluxo**, e **por que ela √© cr√≠tica**, mesmo que n√£o tenha sido destacada no meu fluxograma anterior.

---

## üß© O que √© a `pain.009`?

A **`pain.009`** √© a mensagem oficial do **Cat√°logo de Mensagens do SPI** chamada:

> **"Solicita√ß√£o de Confirma√ß√£o de Recorr√™ncia"**

Ela √© enviada **do PSP recebedor para o PSP pagador** com o objetivo de **iniciar o processo de autoriza√ß√£o do Pix Autom√°tico**, informando os detalhes da recorr√™ncia que o usu√°rio pagador deve confirmar.

---

## üîÅ Fluxo Correto com `pain.009` ‚Äì Foco na Jornada 1

A **Jornada 1** (autoriza√ß√£o sem QR Code, com notifica√ß√£o via app) **come√ßa com a `pain.009`**, n√£o com a `pain.013`.

Corrigindo e aprofundando o fluxo com base no documento:

```
+----------------------------------+
| 1. Cria√ß√£o da Recorr√™ncia        |
| - Recebedor cria recorr√™ncia no  |
|   PSP Recebedor (status: criada) |
+----------------------------------+
                  |
                  v
+----------------------------------+
| 2. PSP Recebedor envia pain.009  |
| - Envia ao PSP Pagador via SPI   |
| - Cont√©m:                        |
|   ‚Ä¢ Dados da recorr√™ncia         |
|   ‚Ä¢ ID da recorr√™ncia (ex: RR...)|
|   ‚Ä¢ Valor, periodicidade,        |
|     data in√≠cio/fim, finalidade  |
|   ‚Ä¢ formaDeIniciacao = AUTO      |
+----------------------------------+
                  |
                  v
+----------------------------------+
| 3. PSP Pagador notifica usu√°rio  |
| - App exibe notifica√ß√£o:         |
|   ‚ÄúVoc√™ foi convidado a autorizar |
|   um pagamento recorrente‚Äù       |
| - Aguarda confirma√ß√£o do usu√°rio |
+----------------------------------+
                  |
                  v
+----------------------------------+
| 4. Usu√°rio Pagador confirma      |
| - Confirma (ou rejeita) no app   |
| - Autentica√ß√£o por biometria,    |
|   senha, etc.                    |
+----------------------------------+
                  |
         +--------+--------+
         |                 |
         v                 v
+----------------+  +----------------------+
| Confirma√ß√£o     |  | Rejei√ß√£o             |
|                 |  |                      |
| ‚Üí PSP Pagador   |  | ‚Üí PSP Pagador envia  |
| envia pain.012  |  | pain.012 com status   |
| com status=true |  | = false              |
|                 |  |                      |
| (confirma aut.) |  | (n√£o h√° retorno ao   |
|                 |  | PSP Recebedor)       |
+----------------+  +----------------------+
         |
         v
+----------------------------------+
| 5. PSP Pagador envia pain.012    |
| - Com status = true              |
| - Informa:                       |
|   ‚Ä¢ codMunIBGE (munic√≠pio do pagador) |
|   ‚Ä¢ dados do usu√°rio pagador     |
|   ‚Ä¢ confirma√ß√£o da autoriza√ß√£o   |
+----------------------------------+
                  |
                  v
+----------------------------------+
| 6. PSP Recebedor recebe pain.012 |
| - Armazena confirma√ß√£o           |
| - Atualiza status da recorr√™ncia |
|   para ‚Äúconfirmada‚Äù              |
| - Pode agora enviar cobran√ßas   |
|   via pain.013                   |
+----------------------------------+
```

---

## üìå Papel das Mensagens no Fluxo

| Mensagem | Sentido | Descri√ß√£o |
|--------|--------|----------|
| **`pain.009`** | PSP Recebedor ‚Üí PSP Pagador | **Inicia a autoriza√ß√£o**. Envia os dados da recorr√™ncia para que o pagador possa confirmar. |
| **`pain.012`** | PSP Pagador ‚Üí PSP Recebedor | **Confirma ou rejeita a autoriza√ß√£o**. Se `status=true`, a recorr√™ncia est√° autorizada. |
| **`pain.013`** | PSP Recebedor ‚Üí PSP Pagador | **Instru√ß√£o de pagamento** (agendamento). S√≥ pode ser enviada **ap√≥s** a `pain.012` com `status=true`. |

> ‚úÖ **Regra clara no documento**:  
> > *"Solicita√ß√£o de confirma√ß√£o de recorr√™ncia: corresponde √† mensagem pain.009, enviada ao PSP pagador para que ele apresente ao usu√°rio pagador uma recorr√™ncia de cobran√ßas que, se confirmada pelo usu√°rio, podem ser pagas por meio do Pix Autom√°tico."*

---

## ‚ùó Por que a `pain.009` n√£o apareceu antes?

No meu fluxograma anterior, **foi um erro de foco** ‚Äî eu **generalizei o in√≠cio do fluxo como `pain.013`**, o que est√° **incorreto para a Jornada 1**. A `pain.013` √© usada **ap√≥s a autoriza√ß√£o**, para **agendar pagamentos**.

A `pain.009` √© **espec√≠fica da Jornada 1**. Nas outras jornadas (2, 3 e 4), a autoriza√ß√£o √© feita via **QR Code + intera√ß√£o direta no app**, e **n√£o h√° necessidade de `pain.009`**, porque a **confirma√ß√£o j√° √© feita com `pain.012` diretamente**.

---

## ‚úÖ Resumo: Quando usar `pain.009`?

| Jornada | Usa `pain.009`? | Explica√ß√£o |
|--------|-----------------|-----------|
| **Jornada 1** (notifica√ß√£o via app) | ‚úÖ Sim | PSP recebedor inicia com `pain.009` |
| **Jornada 2** (QR Code s√≥ recorr√™ncia) | ‚ùå N√£o | Autoriza√ß√£o via leitura do QR ‚Üí `pain.012` direto |
| **Jornada 3** (QR Code + pagamento imediato) | ‚ùå N√£o | Autoriza√ß√£o simult√¢nea ao pagamento ‚Üí `pain.012` |
| **Jornada 4** (QR Code + agendamento) | ‚ùå N√£o | Autoriza√ß√£o ap√≥s pagamento/agendamento ‚Üí `pain.012` |

---

## üîÑ Fluxo Alternativo: Jornadas 2, 3 e 4 (sem `pain.009`)

Nessas jornadas, o fluxo come√ßa com o **usu√°rio pagador lendo um QR Code**, e o app do PSP pagador faz um `GET /pix/v2/rec/{txid}` para buscar os dados da recorr√™ncia. Ap√≥s a confirma√ß√£o, o PSP pagador envia **diretamente a `pain.012`** ao PSP recebedor.

```
QR Code ‚Üí GET /rec/{txid} ‚Üí Confirma√ß√£o no app ‚Üí pain.012 (sem pain.009)
```

---

## üìö Conclus√£o

- A **`pain.009` √© essencial na Jornada 1**, onde n√£o h√° QR Code.
- Ela **inicia o processo de autoriza√ß√£o** entre PSPs.
- A **`pain.012` √© a resposta do PSP pagador**, confirmando ou rejeitando.
- A **`pain.013` s√≥ entra em cena depois**, para **agendar os d√©bitos recorrentes**.
- Nas jornadas com QR Code, **a `pain.009` n√£o √© usada** ‚Äî a autoriza√ß√£o √© iniciada pelo pr√≥prio usu√°rio ao interagir com o QR.

---

Se desejar, posso atualizar o **fluxograma visual** para incluir a `pain.009` corretamente na Jornada 1. Deseja isso?

### USER
Sim, revise tudo e gere a informa√ß√£o completa e n√£o economize tokens.

### ASSISTANT
Com base na an√°lise completa e detalhada do **Guia de Implementa√ß√£o do Pix Autom√°tico (vers√£o 1.2)**, apresento abaixo uma **vis√£o integrada, t√©cnica e operacional** do fluxo do Pix Autom√°tico, com foco na **jornada de troca de mensagens entre o PSP pagador e o PSP recebedor**, incluindo todas as **jornadas de autoriza√ß√£o**, as **mensagens do SPI (pain.009, pain.012, pain.013, camt.054, camt.055)**, os **pap√©is dos usu√°rios**, as **regras de valida√ß√£o**, os **fluxos de erro**, e as **responsabilidades de notifica√ß√£o**.

Este documento √© uma **refer√™ncia completa e definitiva** para especialistas em Pix, equipes de desenvolvimento, compliance e opera√ß√µes de institui√ß√µes financeiras e fintechs.

---

# üìò **Guia Completo: Jornada do Pix Autom√°tico ‚Äì Fluxo de Mensagens entre PSPs**

---

## üîç **1. Introdu√ß√£o**

O **Pix Autom√°tico** √© um mecanismo de **pagamento recorrente autorizado previamente** pelo usu√°rio pagador, que permite o **d√©bito autom√°tico** de valores em sua conta transacional, mediante **autoriza√ß√£o expl√≠cita** e **agendamento pr√©vio** via infraestrutura do Sistema de Pagamentos Instant√¢neos (SPI) do Banco Central.

Este guia detalha o **fluxo completo**, com foco na **troca de mensagens entre os PSPs (Participantes do SPI)**, com base no **Guia de Implementa√ß√£o do Pix Autom√°tico (v1.2)**.

---

## üß© **2. Etapas Fundamentais do Pix Autom√°tico**

O processo pode ser dividido em **6 etapas principais**:

1. **Cria√ß√£o da Recorr√™ncia**
2. **Autoriza√ß√£o (com 4 jornadas poss√≠veis)**
3. **Agendamento do D√©bito (via pain.013)**
4. **Liquida√ß√£o**
5. **Gest√£o P√≥s-Pagamento (notifica√ß√µes, cancelamentos, retentativas)**
6. **Devolu√ß√£o (MED)**

Vamos detalhar cada uma.

---

## ‚úÖ **3. Etapa 1: Cria√ß√£o da Recorr√™ncia**

### üìå Respons√°vel: **PSP Recebedor** (por solicita√ß√£o do **usu√°rio recebedor**)

### üì• Dados da Recorr√™ncia
A recorr√™ncia √© criada com status **‚Äúpendente de confirma√ß√£o‚Äù** e cont√©m os seguintes dados:

| Campo | Descri√ß√£o |
|------|----------|
| `idRecorrencia` | ID √∫nico no formato: `RRxxxxxxxxyyyyMMddkkkkkkkkkkk` (29 caracteres) |
| `formaDeIniciacao` | Sempre `AUTO` |
| `valor` | Obrigat√≥rio apenas para recorr√™ncias de **valor fixo** |
| `periodicidade` | Semanal, mensal, trimestral, semestral, anual |
| `dataInicio` | Data de in√≠cio da vig√™ncia |
| `dataFim` | Opcional. Recomenda-se que esteja alguns dias ap√≥s o √∫ltimo pagamento previsto |
| `descricao` | Descri√ß√£o opcional do objeto da cobran√ßa |
| `idObjetoCobranca` | N√∫mero do contrato, pedido ou c√≥digo do cliente |
| `politicaRetentativa` | Define se permite novas tentativas ap√≥s vencimento (`S` ou `N`) |

> üìå **Regra**: O campo `idRecorrencia` codifica informa√ß√µes:
> - `RR` = criada no Pix + permite retentativas p√≥s-vencimento
> - `RN` = criada no Pix + **n√£o** permite retentativas
> - `CR`/`CN` = criada via Open Finance

---

## üîÅ **4. Etapa 2: Autoriza√ß√£o ‚Äì As 4 Jornadas**

A autoriza√ß√£o √© o momento em que o **usu√°rio pagador confirma** que aceita o pagamento recorrente. Existem **4 jornadas poss√≠veis**, com diferentes pontos de partida.

---

### üü¶ **Jornada 1: Autoriza√ß√£o sem QR Code (Notifica√ß√£o via App)**

**Fluxo**: O usu√°rio pagador √© convidado a autorizar uma recorr√™ncia por canais **externos ao Pix** (ex: e-mail, liga√ß√£o, app do recebedor).

#### üîÅ Fluxo de Mensagens

```mermaid
sequenceDiagram
    participant Recebedor
    participant PSPR as PSP Recebedor
    participant PSPC as PSP Pagador
    participant Pagador

    Recebedor->>PSPR: Solicita cria√ß√£o da recorr√™ncia
    PSPR->>PSPC: Envia pain.009 (solicita√ß√£o de confirma√ß√£o)
    PSPC->>Pagador: Notifica via app: "Autorizar recorr√™ncia?"
    Pagador->>PSPC: Confirma (com autentica√ß√£o)
    PSPC->>PSPR: Envia pain.012 (status = true)
    PSPR->>Recebedor: Informa sucesso da autoriza√ß√£o
```

#### üîë Mensagens
- **`pain.009`**: Inicia a autoriza√ß√£o. Cont√©m todos os dados da recorr√™ncia.
- **`pain.012`**: Resposta do PSP pagador. Se `status=true`, a autoriza√ß√£o est√° confirmada.

> ‚ö†Ô∏è **Importante**: Se o PSP pagador **n√£o tiver o codMunIBGE**, deve preencher como `0000000` na `pain.012`.

> üìå **Regra**: N√£o podem existir m√∫ltiplas `pain.009` ativas para a mesma recorr√™ncia.

---

### üü® **Jornada 2: QR Code (s√≥ recorr√™ncia)**

**Fluxo**: O pagador escaneia um QR Code que **aponta apenas para os dados da recorr√™ncia**.

#### üîÅ Fluxo de Mensagens

```mermaid
sequenceDiagram
    participant Recebedor
    participant PSPR
    participant PSPC
    participant Pagador

    Recebedor->>PSPR: Cria recorr√™ncia + gera QR Code com location
    PSPR->>Recebedor: Gera QR Code (faixa 80-99)
    Pagador->>PSPC: L√™ QR Code
    PSPC->>PSPR: GET /pix/v2/rec/{txid}
    PSPR->>PSPC: Retorna dados da recorr√™ncia
    PSPC->>Pagador: Exibe detalhes e pede confirma√ß√£o
    Pagador->>PSPC: Confirma
    PSPC->>PSPR: Envia pain.012 (status = true)
    PSPR->>Recebedor: Informa sucesso
```

> ‚úÖ **N√£o h√° `pain.009`** nesta jornada. A `pain.012` √© enviada diretamente ap√≥s a confirma√ß√£o.

---

### üü• **Jornada 3: QR Code Composto (Pagamento Imediato + Recorr√™ncia)**

**Fluxo**: QR Code com **dois payloads**:
- Um para **pagamento imediato** (via `location` ou dados est√°ticos)
- Outro para **recorr√™ncia** (sempre via `location`)

#### üîÅ Fluxo de Mensagens

```mermaid
sequenceDiagram
    participant Recebedor
    participant PSPR
    participant PSPC
    participant Pagador

    Recebedor->>PSPR: Cria cobran√ßa imediata + recorr√™ncia
    PSPR->>Recebedor: Gera QR Code composto
    Pagador->>PSPC: L√™ QR Code
    PSPC->>PSPR: GET /cobv/{txid} e GET /rec/{txid}
    PSPR->>PSPC: Retorna dados
    PSPC->>Pagador: Exibe pagamento + checkbox "Autorizar recorr√™ncia"
    Pagador->>PSPC: Confirma ambos
    PSPC->>PSPR: Inicia Pix imediato (pacs.008)
    PSPC->>PSPR: Ap√≥s sucesso, envia pain.012 (status = true)
    PSPR->>Recebedor: Informa sucesso do pagamento e da autoriza√ß√£o
```

> ‚ö†Ô∏è **Regra cr√≠tica**: A autoriza√ß√£o da recorr√™ncia **s√≥ √© confirmada ap√≥s a liquida√ß√£o do pagamento imediato**.

> üìå **Extrato**: O pagamento imediato aparece como **Pix normal**, n√£o como Pix Autom√°tico.

---

### üüß **Jornada 4: Autoriza√ß√£o Ap√≥s Pagamento/Agendamento com Vencimento**

**Fluxo**: O usu√°rio paga ou agenda uma cobran√ßa com vencimento e, **ao final**, recebe a oferta de ades√£o ao Pix Autom√°tico.

#### üîÅ Fluxo de Mensagens

```mermaid
sequenceDiagram
    participant Recebedor
    participant PSPR
    participant PSPC
    participant Pagador

    Recebedor->>PSPR: Cria cobran√ßa com vencimento + recorr√™ncia
    PSPR->>Recebedor: Gera QR Code composto
    Pagador->>PSPC: L√™ QR Code e paga/agenda
    PSPC->>PSPR: Confirma pagamento/agendamento
    PSPC->>Pagador: Oferece ades√£o ao Pix Autom√°tico
    Pagador->>PSPC: Aceita ou recusa
    alt Aceita
        PSPC->>PSPR: Envia pain.012 (status = true)
        PSPR->>Recebedor: Informa sucesso
    else Recusa
        PSPC->>PSPR: N√£o envia nada
    end
```

> ‚úÖ **Diferencial**: Autoriza√ß√£o **opcional** e **p√≥s-pagamento**.

> ‚ö†Ô∏è **Regra**: Se o pagamento falhar, **n√£o pode ser ofertado** o Pix Autom√°tico.

---

## üîÑ **5. Etapa 3: Agendamento do D√©bito (Instru√ß√£o de Pagamento)**

Ap√≥s a autoriza√ß√£o, o **PSP recebedor envia a `pain.013`** para agendar o d√©bito.

### üì• `pain.013` ‚Äì Instru√ß√£o de Pagamento

| Campo | Valor |
|------|-------|
| `formaDeIniciacao` | `AUTO` |
| `idFimAFim` | Data prevista para liquida√ß√£o (no formato `YYYYMMDD`) |
| `finalidadeDoAgendamento` | Pode ser: `AGND`, `RIFL`, `NTAG` |
| `valor` | Valor da cobran√ßa |
| `idConciliacaoRecebedor` | ID para concilia√ß√£o |
| `dataHoraCriacaoParaEmissao` | Data/hora de envio da instru√ß√£o (para valida√ß√£o de prazo) |

### üìÖ **Prazos de Envio**
- A `pain.013` deve ser enviada **entre 2 e 10 dias corridos antes** da data de liquida√ß√£o.
- O PSP pagador valida com base no campo `dataHoraCriacaoParaEmissao`.

---

### üö´ **Valida√ß√µes no PSP Pagador**

O PSP pagador **rejeita** o agendamento se:

| Condi√ß√£o | Mensagem |
|--------|---------|
| Valor ‚â† valor autorizado (fixo) | `camt.054` |
| Valor > valor m√°ximo (vari√°vel) | `camt.054` |
| Data incompat√≠vel com periodicidade | `camt.054` |
| CNPJ do recebedor divergente | `pain.014` com erro `AB10` |
| Sem autoriza√ß√£o vigente | `camt.054` |
| Fora do prazo (menos de 2 dias) | `camt.054` |

> ‚úÖ **Exce√ß√£o**: Instru√ß√µes com `finalidadeDoAgendamento = RIFL` **n√£o s√£o validadas quanto a valor m√°ximo ou autoriza√ß√£o ativa**.

---

## üí∏ **6. Etapa 4: Liquida√ß√£o**

- Ocorre entre **0h e 8h** do dia agendado.
- O PSP pagador envia uma **ordem de pagamento (pacs.008)** ao SPI.
- Se houver **insufici√™ncia de saldo ou falha operacional**, o PSP pagador **n√£o envia a ordem** e notifica o usu√°rio.

### üõë **Ap√≥s as 21h:**
- **N√£o s√£o aceitas novas instru√ß√µes com `RIFL`**.
- Se o pagamento n√£o foi liquidado, o PSP pagador **informa o usu√°rio** que deve pagar por outros meios.

---

## üîÅ **7. Retentativas de Pagamento**

Se o pagamento falhar, h√° dois tipos de retentativa:

### üîÑ **RIFL (Rein√≠cio da Instru√ß√£o por Falha na Liquida√ß√£o)**
- Usada **intradiariamente** (at√© 23h59 do dia anterior).
- Finalidade: `RIFL`
- Pode ser reenviada v√°rias vezes.
- **N√£o √© validada quanto a valor m√°ximo**.

### üìÖ **NTAG (Nova Tentativa p√≥s Vencimento)**
- Usada **quando a recorr√™ncia permite retentativas ap√≥s vencimento**.
- Finalidade: `NTAG`
- Enviada via `POST /cobr/{txid}/retentativa/{data}`
- **Usu√°rio pagador n√£o pode cancelar** agendamentos com `NTAG`.

> üìå **Regra**: O campo `politicaRetentativa` da recorr√™ncia define se `NTAG` √© permitida.

---

## üì¢ **8. Notifica√ß√µes Obrigat√≥rias**

### üì± **Para o Usu√°rio Pagador**
O PSP pagador **deve notificar** em:
- Sucesso/insucesso do agendamento
- Cancelamento do agendamento (por ele ou pelo recebedor)
- Falha na liquida√ß√£o
- Oferta de ades√£o (Jornada 4)

> ‚úÖ **Pode ser desabilitado** pelo usu√°rio.

### üì± **Para o Usu√°rio Recebedor**
O PSP recebedor **deve informar**:
- Sucesso/insucesso do agendamento
- Cancelamento pelo pagador
- Sucesso/insucesso do cancelamento da cobran√ßa

---

## üö´ **9. Cancelamento**

### üõë **Pelo Usu√°rio Pagador**
- Pode cancelar **a qualquer momento**.
- O agendamento √© cancelado at√© a **v√©spera da liquida√ß√£o**.
- Ap√≥s 22h do dia anterior, **n√£o pode mais cancelar**.

### üõë **Pelo Usu√°rio Recebedor**
- Pode cancelar a cobran√ßa.
- **Ap√≥s 22h do dia anterior**, o PSP recebedor **deve rejeitar** o cancelamento.

---

## üîÑ **10. Altera√ß√£o de Recorr√™ncia**

- **N√£o √© permitido alterar recorr√™ncia confirmada**.
- Deve-se:
  1. **Cancelar** a recorr√™ncia atual
  2. **Criar uma nova** com os dados alterados
  3. **Solicitar nova autoriza√ß√£o**

> ‚ö†Ô∏è **Exce√ß√£o**: Altera√ß√µes antes da confirma√ß√£o s√£o permitidas.

---

## üîê **11. Papel do PSI (Prestador de Servi√ßo de Inicia√ß√£o)**

No modelo Open Finance:

- O usu√°rio pagador concede **consentimento ao PSI**.
- O PSI atua como intermedi√°rio.
- O PSP pagador **valida o consentimento** a cada pagamento.
- Se os dados n√£o batem ou o consentimento estiver expirado, **n√£o agenda o d√©bito**.

> üìå O consentimento cont√©m:
> - ID da recorr√™ncia
> - Valor m√°ximo
> - Per√≠odo de vig√™ncia
> - Status (`AUTHORIZED`, `REVOKED`, etc.)

---

## üîÑ **12. Fluxo de Erros e Cancelamentos**

| Mensagem | Uso |
|--------|-----|
| `camt.054` | Rejei√ß√£o **antes** da liquida√ß√£o (ex: valor inv√°lido) |
| `camt.055` | Cancelamento **ap√≥s** falha na liquida√ß√£o |
| `pain.014` | Erros espec√≠ficos (ex: `AB10` = CNPJ divergente) |

---

## üìÑ **13. MED ‚Äì Mecanismo Especial de Devolu√ß√£o**

- O usu√°rio pagador pode solicitar devolu√ß√£o em at√© **90 dias**.
- O PSP pagador **devolve em at√© 24h**.
- Depois, solicita ressarcimento ao PSP recebedor via **DICT**.

> ‚úÖ **Eleg√≠vel** para Pix Autom√°tico.

---

## üìä **14. Resumo das Mensagens do SPI**

| Mensagem | Origem ‚Üí Destino | Finalidade |
|--------|------------------|-----------|
| `pain.009` | PSP Recebedor ‚Üí PSP Pagador | Iniciar autoriza√ß√£o (Jornada 1) |
| `pain.012` | PSP Pagador ‚Üí PSP Recebedor | Confirmar/rejeitar autoriza√ß√£o |
| `pain.013` | PSP Recebedor ‚Üí PSP Pagador | Agendar d√©bito recorrente |
| `camt.054` | PSP Pagador ‚Üí PSP Recebedor | Rejeitar agendamento |
| `camt.055` | PSP Pagador ‚Üí PSP Recebedor | Cancelar ordem ap√≥s falha |
| `pain.014` | PSP Recebedor ‚Üí PSP Pagador | Informar erro espec√≠fico |
| `pacs.008` | PSP Pagador ‚Üí SPI | Ordem de pagamento (liquida√ß√£o) |

---

## üìå **15. Boas Pr√°ticas e Regras Cr√≠ticas**

1. **QR Code**:
   - Faixa 26-51: obrigat√≥ria (mesmo que vazia).
   - Faixa 80-99: opcional, para dados da recorr√™ncia.

2. **Valor M√°ximo**:
   - Armazenado apenas no **PSP pagador** (n√£o compartilhado).
   - Aplic√°vel apenas a recorr√™ncias de **valor vari√°vel**.

3. **Ajuste de Dia √ötil**:
   - Se a data de pagamento cair em dia n√£o √∫til, o PSP recebedor **deve ajustar para o pr√≥ximo dia √∫til**, considerando **feriados locais** (com base no `codMunIBGE`).

4. **Data Final da Recorr√™ncia**:
   - Deve ser alguns dias ap√≥s o √∫ltimo pagamento, para permitir retentativas.

5. **Notifica√ß√£o de Agendamento**:
   - Deve ocorrer **imediatamente**, exceto se for de madrugada (neste caso, adiar para hor√°rio diurno).

---

## üèÅ **Conclus√£o**

O Pix Autom√°tico √© um sistema robusto, seguro e flex√≠vel, que combina **autoriza√ß√£o expl√≠cita**, **agendamento pr√©vio**, **liquida√ß√£o autom√°tica** e **gest√£o de erros padronizada**.

As **quatro jornadas de autoriza√ß√£o** permitem adapta√ß√£o a diferentes modelos de neg√≥cio, desde assinaturas digitais at√© pagamentos recorrentes em lojas f√≠sicas.

O **fluxo de mensagens entre PSPs** ‚Äî especialmente `pain.009`, `pain.012`, `pain.013`, `camt.054` e `camt.055` ‚Äî √© o cora√ß√£o do sistema, garantindo **integridade, seguran√ßa e transpar√™ncia**.

---

Se desejar, posso gerar:
- Um **diagrama Mermaid completo** com todas as jornadas
- Um **modelo de API Pix** para cria√ß√£o de recorr√™ncia
- Um **checklist de conformidade** para PSPs
- Um **fluxograma em PNG/SVG**

Deseja algum desses artefatos?

### USER
Quero todas as op√ß√µes.Nao economize tokens

### ASSISTANT
Com base na an√°lise completa do **Guia de Implementa√ß√£o do Pix Autom√°tico (vers√£o 1.2)**, e atendendo ao seu pedido de **informa√ß√£o completa, detalhada e sem economia de tokens**, apresento abaixo um **documento t√©cnico definitivo** sobre o Pix Autom√°tico.

Este conte√∫do √© o mais completo poss√≠vel, integrando:
- **Todas as jornadas de autoriza√ß√£o**
- **O fluxo completo de mensagens entre PSPs** (pain.009, pain.012, pain.013, camt.054, camt.055, pacs.008)
- **Regras de valida√ß√£o, cancelamento, retentativas e liquida√ß√£o**
- **Funcionalidades obrigat√≥rias para pagador e recebedor**
- **Papel do PSI (Open Finance)**
- **Modelos de QR Code**
- **Checklist de conformidade**
- **Fluxograma Mermaid completo**
- **Modelo de API Pix**
- **Checklist de notifica√ß√µes**
- **PDF e PNG do fluxograma (via link simulado)**

---

# üìò **DOCUMENTO COMPLETO: PIX AUTOM√ÅTICO ‚Äì GUIA T√âCNICO, OPERACIONAL E JUR√çDICO**

> **Baseado no Guia de Implementa√ß√£o do Pix Autom√°tico ‚Äì Vers√£o 1.2 (29/05/2025)**  
> **Elaborado por: Especialista em Pix | BC, PSPs, Fintechs, Open Finance**

---

## üîç **1. Introdu√ß√£o**

O **Pix Autom√°tico** √© um mecanismo de **pagamento recorrente autorizado previamente** pelo usu√°rio pagador, que permite o **d√©bito autom√°tico** em sua conta transacional, mediante **autoriza√ß√£o expl√≠cita** e **agendamento pr√©vio** via infraestrutura do Sistema de Pagamentos Instant√¢neos (SPI).

Este documento √© uma **refer√™ncia t√©cnica, operacional e jur√≠dica** para:
- **PSPs pagadores e recebedores**
- **Desenvolvedores de APIs**
- **Compliance e risco operacional**
- **Fintechs e PSIs (Prestadores de Servi√ßo de Inicia√ß√£o)**
- **Consultores e reguladores**

---

## üß© **2. Etapas Fundamentais do Pix Autom√°tico**

O processo √© dividido em **6 etapas principais**:

| Etapa | Descri√ß√£o |
|------|----------|
| 1. Cria√ß√£o da Recorr√™ncia | Recebedor cria recorr√™ncia no PSP Recebedor |
| 2. Autoriza√ß√£o | Pagador confirma via 4 jornadas |
| 3. Agendamento | PSP Recebedor envia `pain.013` |
| 4. Liquida√ß√£o | D√©bito autom√°tico entre 0h e 8h |
| 5. Gest√£o P√≥s-Pagamento | Notifica√ß√µes, cancelamentos, retentativas |
| 6. Devolu√ß√£o (MED) | At√© 90 dias ap√≥s o pagamento |

---

## ‚úÖ **3. Etapa 1: Cria√ß√£o da Recorr√™ncia**

### üìå Respons√°vel: **PSP Recebedor** (por solicita√ß√£o do usu√°rio recebedor)

### üì• Dados Obrigat√≥rios

| Campo | Descri√ß√£o |
|------|----------|
| `idRecorrencia` | ID √∫nico: `RRxxxxxxxxyyyyMMddkkkkkkkkkkk` (29 caracteres) |
| `formaDeIniciacao` | Sempre `AUTO` |
| `valor` | Obrigat√≥rio para recorr√™ncias de **valor fixo** |
| `periodicidade` | Semanal, mensal, trimestral, semestral, anual |
| `dataInicio` | Data de in√≠cio da vig√™ncia |
| `dataFim` | Opcional. Recomenda-se alguns dias ap√≥s o √∫ltimo pagamento |
| `descricao` | Descri√ß√£o opcional do objeto da cobran√ßa |
| `idObjetoCobranca` | N√∫mero do contrato, pedido, cliente |
| `politicaRetentativa` | `S` (permite retentativas p√≥s-vencimento) ou `N` |

### üßÆ Formato do `idRecorrencia`

| Prefixo | Origem | Permite NTAG? |
|--------|--------|---------------|
| `RR` | Criada no Pix | Sim |
| `RN` | Criada no Pix | N√£o |
| `CR` | Open Finance | Sim |
| `CN` | Open Finance | N√£o |

> ‚úÖ **Regra**: A `dataFim` deve estar alguns dias ap√≥s o √∫ltimo pagamento, para permitir retentativas.

---

## üîÅ **4. Etapa 2: Autoriza√ß√£o ‚Äì As 4 Jornadas**

---

### üü¶ **Jornada 1: Notifica√ß√£o via App (sem QR Code)**

**Fluxo**: O recebedor notifica o pagador por canais externos (e-mail, WhatsApp, liga√ß√£o). O PSP Recebedor inicia o processo via mensageria.

#### üîÅ Fluxo de Mensagens

```mermaid
sequenceDiagram
    participant Recebedor
    participant PSPR as PSP Recebedor
    participant PSPC as PSP Pagador
    participant Pagador

    Recebedor->>PSPR: Cria recorr√™ncia (status: criada)
    PSPR->>PSPC: Envia pain.009 (solicita√ß√£o de confirma√ß√£o)
    PSPC->>Pagador: Notifica: "Autorizar recorr√™ncia?"
    Pagador->>PSPC: Confirma (com autentica√ß√£o)
    PSPC->>PSPR: Envia pain.012 (status = true)
    PSPR->>Recebedor: Informa sucesso
```

#### üîë Regras
- **`pain.009`**: Inicia a autoriza√ß√£o.
- **`pain.012`**: Confirma (`status=true`) ou rejeita (`status=false`).
- **N√£o pode haver m√∫ltiplas `pain.009` ativas** para a mesma recorr√™ncia.
- Se o PSP pagador n√£o conhecer o `codMunIBGE`, preenche como `0000000`.

---

### üü® **Jornada 2: QR Code (s√≥ recorr√™ncia)**

**Fluxo**: O pagador escaneia um QR Code com `location` apontando para os dados da recorr√™ncia.

#### üîÅ Fluxo de Mensagens

```mermaid
sequenceDiagram
    participant Recebedor
    participant PSPR
    participant PSPC
    participant Pagador

    Recebedor->>PSPR: Cria recorr√™ncia + gera QR Code com location
    PSPR->>Recebedor: Gera QR Code (faixa 80-99)
    Pagador->>PSPC: L√™ QR Code
    PSPC->>PSPR: GET /pix/v2/rec/{txid}
    PSPR->>PSPC: Retorna dados da recorr√™ncia
    PSPC->>Pagador: Exibe detalhes + checkbox
    Pagador->>PSPC: Confirma
    PSPC->>PSPR: Envia pain.012 (status = true)
    PSPR->>Recebedor: Informa sucesso
```

> ‚úÖ **N√£o h√° `pain.009`** nesta jornada.

---

### üü• **Jornada 3: QR Code Composto (Pagamento Imediato + Recorr√™ncia)**

**Fluxo**: QR Code com dois payloads:
- Um para **pagamento imediato** (Pix normal)
- Outro para **recorr√™ncia** (via `location`)

#### üîÅ Fluxo de Mensagens

```mermaid
sequenceDiagram
    participant Recebedor
    participant PSPR
    participant PSPC
    participant Pagador

    Recebedor->>PSPR: Cria cobran√ßa imediata + recorr√™ncia
    PSPR->>Recebedor: Gera QR Code composto
    Pagador->>PSPC: L√™ QR Code
    PSPC->>PSPR: GET /cobv/{txid} e GET /rec/{txid}
    PSPR->>PSPC: Retorna dados
    PSPC->>Pagador: Exibe pagamento + checkbox: "Autorizar Pix Autom√°tico"
    Pagador->>PSPC: Confirma ambos
    PSPC->>PSPR: Inicia Pix imediato (pacs.008)
    PSPC->>PSPR: Ap√≥s sucesso, envia pain.012 (status = true)
    PSPR->>Recebedor: Informa sucesso do pagamento e da autoriza√ß√£o
```

#### üîë Regras
- **Pagamento imediato √© obrigat√≥rio**.
- **Autoriza√ß√£o da recorr√™ncia √© obrigat√≥ria**.
- **N√£o pode haver dissocia√ß√£o** entre os dois.
- O pagamento imediato aparece como **‚ÄúPix normal‚Äù** no extrato.

---

### üüß **Jornada 4: Autoriza√ß√£o Ap√≥s Pagamento/Agendamento com Vencimento**

**Fluxo**: O pagador paga ou agenda uma cobran√ßa com vencimento e, **ap√≥s a conclus√£o**, recebe a oferta de ades√£o ao Pix Autom√°tico.

#### üîÅ Fluxo de Mensagens

```mermaid
sequenceDiagram
    participant Recebedor
    participant PSPR
    participant PSPC
    participant Pagador

    Recebedor->>PSPR: Cria cobran√ßa com vencimento + recorr√™ncia
    PSPR->>Recebedor: Gera QR Code composto
    Pagador->>PSPC: L√™ QR Code e paga/agenda
    PSPC->>PSPR: Confirma pagamento/agendamento
    PSPC->>Pagador: Oferece ades√£o ao Pix Autom√°tico
    Pagador->>PSPC: Aceita ou recusa
    alt Aceita
        PSPC->>PSPR: Envia pain.012 (status = true)
        PSPR->>Recebedor: Informa sucesso
    else Recusa
        PSPC->>PSPR: N√£o envia nada
    end
```

#### üîë Regras
- **Autoriza√ß√£o √© opcional**.
- **S√≥ √© ofertada se o pagamento/agendamento for bem-sucedido**.
- Se houver erro, **n√£o pode ser ofertado** o Pix Autom√°tico.

---

## üîÑ **5. Etapa 3: Agendamento do D√©bito (Instru√ß√£o de Pagamento)**

Ap√≥s a autoriza√ß√£o, o **PSP Recebedor envia a `pain.013`** para agendar o d√©bito.

### üì• `pain.013` ‚Äì Instru√ß√£o de Pagamento

| Campo | Valor |
|------|-------|
| `formaDeIniciacao` | `AUTO` |
| `idFimAFim` | Data prevista para liquida√ß√£o (`YYYYMMDD`) |
| `finalidadeDoAgendamento` | `AGND`, `RIFL`, `NTAG` |
| `valor` | Valor da cobran√ßa |
| `idConciliacaoRecebedor` | ID para concilia√ß√£o |
| `dataHoraCriacaoParaEmissao` | Data/hora de envio da instru√ß√£o |

### üìÖ **Prazos de Envio**
- A `pain.013` deve ser enviada **entre 2 e 10 dias corridos antes** da data de liquida√ß√£o.
- O PSP pagador valida com base no campo `dataHoraCriacaoParaEmissao`.

---

### üö´ **Valida√ß√µes no PSP Pagador**

O PSP pagador **rejeita** o agendamento se:

| Condi√ß√£o | Mensagem |
|--------|---------|
| Valor ‚â† valor autorizado (fixo) | `camt.054` |
| Valor > valor m√°ximo (vari√°vel) | `camt.054` |
| Data incompat√≠vel com periodicidade | `camt.054` |
| CNPJ do recebedor divergente | `pain.014` com erro `AB10` |
| Sem autoriza√ß√£o vigente | `camt.054` |
| Fora do prazo (menos de 2 dias) | `camt.054` |

> ‚úÖ **Exce√ß√£o**: Instru√ß√µes com `finalidadeDoAgendamento = RIFL` **n√£o s√£o validadas quanto a valor m√°ximo ou autoriza√ß√£o ativa**.

---

## üí∏ **6. Etapa 4: Liquida√ß√£o**

- Ocorre entre **0h e 8h** do dia agendado.
- O PSP pagador envia uma **ordem de pagamento (pacs.008)** ao SPI.
- Se houver **insufici√™ncia de saldo ou falha operacional**, o PSP pagador **n√£o envia a ordem** e notifica o usu√°rio.

### üõë **Ap√≥s as 21h:**
- **N√£o s√£o aceitas novas instru√ß√µes com `RIFL`**.
- Se o pagamento n√£o foi liquidado, o PSP pagador **informa o usu√°rio** que deve pagar por outros meios.

---

## üîÅ **7. Retentativas de Pagamento**

### üîÑ **RIFL (Rein√≠cio da Instru√ß√£o por Falha na Liquida√ß√£o)**
- Usada **intradiariamente** (at√© 23h59 do dia anterior).
- Finalidade: `RIFL`
- Pode ser reenviada v√°rias vezes.
- **N√£o √© validada quanto a valor m√°ximo**.

### üìÖ **NTAG (Nova Tentativa p√≥s Vencimento)**
- Usada **quando a recorr√™ncia permite retentativas ap√≥s vencimento**.
- Finalidade: `NTAG`
- Enviada via `POST /cobr/{txid}/retentativa/{data}`
- **Usu√°rio pagador n√£o pode cancelar** agendamentos com `NTAG`.

> üìå **Regra**: O campo `politicaRetentativa` da recorr√™ncia define se `NTAG` √© permitida.

---

## üì¢ **8. Notifica√ß√µes Obrigat√≥rias**

### üì± **Para o Usu√°rio Pagador**
O PSP pagador **deve notificar** em:
- Sucesso/insucesso do agendamento
- Cancelamento do agendamento (por ele ou pelo recebedor)
- Falha na liquida√ß√£o
- Oferta de ades√£o (Jornada 4)

> ‚úÖ **Pode ser desabilitado** pelo usu√°rio (exceto notifica√ß√µes de erro).

### üì± **Para o Usu√°rio Recebedor**
O PSP recebedor **deve informar**:
- Sucesso/insucesso do agendamento
- Cancelamento pelo pagador
- Sucesso/insucesso do cancelamento da cobran√ßa

---

## üö´ **9. Cancelamento**

### üõë **Pelo Usu√°rio Pagador**
- Pode cancelar **a qualquer momento**.
- O agendamento √© cancelado at√© a **v√©spera da liquida√ß√£o**.
- Ap√≥s 22h do dia anterior, **n√£o pode mais cancelar**.

### üõë **Pelo Usu√°rio Recebedor**
- Pode cancelar a cobran√ßa.
- **Ap√≥s 22h do dia anterior**, o PSP recebedor **deve rejeitar** o cancelamento.

---

## üîÑ **10. Altera√ß√£o de Recorr√™ncia**

- **N√£o √© permitido alterar recorr√™ncia confirmada**.
- Deve-se:
  1. **Cancelar** a recorr√™ncia atual
  2. **Criar uma nova** com os dados alterados
  3. **Solicitar nova autoriza√ß√£o**

> ‚ö†Ô∏è **Exce√ß√£o**: Altera√ß√µes antes da confirma√ß√£o s√£o permitidas.

---

## üîê **11. Papel do PSI (Prestador de Servi√ßo de Inicia√ß√£o)**

No modelo Open Finance:

- O usu√°rio pagador concede **consentimento ao PSI**.
- O PSI atua como intermedi√°rio.
- O PSP pagador **valida o consentimento** a cada pagamento.
- Se os dados n√£o batem ou o consentimento estiver expirado, **n√£o agenda o d√©bito**.

> üìå O consentimento cont√©m:
> - ID da recorr√™ncia
> - Valor m√°ximo
> - Per√≠odo de vig√™ncia
> - Status (`AUTHORIZED`, `REVOKED`, etc.)

> üìå **Regra**: Se o pagamento for iniciado pelo ITP (Open Finance), a `pacs.008` deve ter `formaDeIniciacao = AUTO` e `idConciliacaoRecebedor = 00000000000000000000000000` (26 zeros).

---

## üîÑ **12. Fluxo de Erros e Cancelamentos**

| Mensagem | Uso |
|--------|-----|
| `camt.054` | Rejei√ß√£o **antes** da liquida√ß√£o (ex: valor inv√°lido) |
| `camt.055` | Cancelamento **ap√≥s** falha na liquida√ß√£o |
| `pain.014` | Erros espec√≠ficos (ex: `AB10` = CNPJ divergente) |

---

## üìÑ **13. MED ‚Äì Mecanismo Especial de Devolu√ß√£o**

- O usu√°rio pagador pode solicitar devolu√ß√£o em at√© **90 dias**.
- O PSP pagador **devolve em at√© 24h**.
- Depois, solicita ressarcimento ao PSP recebedor via **DICT**.

> ‚úÖ **Eleg√≠vel** para Pix Autom√°tico.

---

## üìä **14. Resumo das Mensagens do SPI**

| Mensagem | Origem ‚Üí Destino | Finalidade |
|--------|------------------|-----------|
| `pain.009` | PSP Recebedor ‚Üí PSP Pagador | Iniciar autoriza√ß√£o (Jornada 1) |
| `pain.012` | PSP Pagador ‚Üí PSP Recebedor | Confirmar/rejeitar autoriza√ß√£o |
| `pain.013` | PSP Recebedor ‚Üí PSP Pagador | Agendar d√©bito recorrente |
| `camt.054` | PSP Pagador ‚Üí PSP Recebedor | Rejeitar agendamento |
| `camt.055` | PSP Pagador ‚Üí PSP Recebedor | Cancelar ordem ap√≥s falha |
| `pain.014` | PSP Recebedor ‚Üí PSP Pagador | Informar erro espec√≠fico |
| `pacs.008` | PSP Pagador ‚Üí SPI | Ordem de pagamento (liquida√ß√£o) |

---

## üìå **15. Boas Pr√°ticas e Regras Cr√≠ticas**

1. **QR Code**:
   - Faixa 26-51: obrigat√≥ria (mesmo que vazia).
   - Faixa 80-99: opcional, para dados da recorr√™ncia.

2. **Valor M√°ximo**:
   - Armazenado apenas no **PSP pagador** (n√£o compartilhado).
   - Aplic√°vel apenas a recorr√™ncias de **valor vari√°vel**.

3. **Ajuste de Dia √ötil**:
   - Se a data de pagamento cair em dia n√£o √∫til, o PSP recebedor **deve ajustar para o pr√≥ximo dia √∫til**, considerando **feriados locais** (com base no `codMunIBGE`).

4. **Data Final da Recorr√™ncia**:
   - Deve ser alguns dias ap√≥s o √∫ltimo pagamento, para permitir retentativas.

5. **Notifica√ß√£o de Agendamento**:
   - Deve ocorrer **imediatamente**, exceto se for de madrugada (neste caso, adiar para hor√°rio diurno).

---

## üñºÔ∏è **16. Fluxograma Visual Completo (Mermaid.js)**

```mermaid
graph TD
    A[Cria√ß√£o da Recorr√™ncia] --> B[Escolha da Jornada]
    B --> C[Jornada 1: Notifica√ß√£o via App]
    B --> D[Jornada 2: QR Code (s√≥ recorr√™ncia)]
    B --> E[Jornada 3: QR Code + Pagamento Imediato]
    B --> F[Jornada 4: QR Code + Agendamento]

    C --> G[PSP Recebedor envia pain.009]
    G --> H[PSP Pagador notifica usu√°rio]
    H --> I[Usu√°rio confirma no app]
    I --> J[PSP Pagador envia pain.012 (status=true)]
    J --> K[Armazenamento da Autoriza√ß√£o]

    D --> L[Gera QR Code com location]
    L --> M[Usu√°rio l√™ QR Code]
    M --> N[App busca dados via API]
    N --> O[Usu√°rio confirma]
    O --> J

    E --> P[Gera QR Code composto]
    P --> Q[Usu√°rio paga + autoriza]
    Q --> R[Aguarda liquida√ß√£o do pagamento imediato]
    R --> J

    F --> S[Gera QR Code composto]
    S --> T[Usu√°rio paga/agenda]
    T --> U[PSP oferece Pix Autom√°tico]
    U --> V{Aceita?}
    V -->|Sim| J
    V -->|N√£o| W[Fim]

    K --> X[Agendamento: PSP envia pain.013 (AGND)]
    X --> Y{Valida√ß√£o no PSP Pagador?}
    Y -->|Sim| Z[Agendamento confirmado]
    Y -->|N√£o| AA[Rejeita com camt.054 + notifica]
    Z --> AB[Liquida√ß√£o (0h-8h)]
    AB --> AC{Sucesso?}
    AC -->|Sim| AD[Fim - Comprovante gerado]
    AC -->|N√£o| AE[Envia camt.055 (FAIL)]
    AE --> AF{Nova tentativa?}
    AF -->|RIFL| AG[Envia nova pain.013 (RIFL)]
    AF -->|NTAG| AH[Envia pain.013 (NTAG)]
    AG --> Y
    AH --> Y

    AD --> AI[Gest√£o: cancelamento, consulta, notifica√ß√µes]
    AI --> AJ[Devolu√ß√£o via MED (at√© 90 dias)]
```

> ‚úÖ **Copie e cole este c√≥digo em um editor Mermaid (ex: Mermaid Live Editor)** para gerar o diagrama visual.

---

## üìÑ **17. Modelo de API Pix para Recorr√™ncia**

```json
POST /pix/v2/rec
{
  "idRecorrencia": "RR123456782025030100000000000",
  "formaDeIniciacao": "AUTO",
  "valor": "100.00",
  "periodicidade": "MENSAL",
  "dataInicio": "2025-03-01",
  "dataFim": "2026-03-01",
  "descricao": "Assinatura Premium",
  "idObjetoCobranca": "ASS12345",
  "politicaRetentativa": "S"
}
```

---

## ‚úÖ **18. Checklist de Conformidade para PSPs**

### Para PSPs Pagadores:
- [ ] Oferecer todas as 4 jornadas de autoriza√ß√£o
- [ ] Armazenar valor m√°ximo por autoriza√ß√£o
- [ ] Notificar usu√°rio em caso de sucesso/insucesso
- [ ] Validar CNPJ com `pain.014` (erro AB10)
- [ ] Permitir desabilita√ß√£o de notifica√ß√µes (exceto erros)
- [ ] Oferecer op√ß√£o de usar linha de cr√©dito
- [ ] Disponibilizar ‚ÄúPagamentos agendados‚Äù no app

### Para PSPs Recebedores:
- [ ] Gerar `idRecorrencia` conforme padr√£o
- [ ] Enviar `pain.009` apenas uma vez por recorr√™ncia
- [ ] Enviar `pain.013` entre 2 e 10 dias antes
- [ ] Rejeitar cancelamento ap√≥s 22h do dia anterior
- [ ] Oferecer API Pix e arquivo padronizado

---

## üìé **19. Downloads Simulados**

Como n√£o posso gerar arquivos diretamente, aqui est√£o links simulados para download:

- üìÑ **[Baixar PDF: Guia Completo Pix Autom√°tico](https://example.com/pix-automatico-completo.pdf)**
- üñºÔ∏è **[Baixar PNG: Fluxograma Completo](https://example.com/pix-automatico-fluxo.png)**
- üì• **[Baixar JSON: Modelo de API](https://example.com/pix-automatico-api.json)**

---

## üèÅ **Conclus√£o**

O Pix Autom√°tico √© um sistema robusto, seguro e flex√≠vel, que combina **autoriza√ß√£o expl√≠cita**, **agendamento pr√©vio**, **liquida√ß√£o autom√°tica** e **gest√£o de erros padronizada**.

As **quatro jornadas de autoriza√ß√£o** permitem adapta√ß√£o a diferentes modelos de neg√≥cio, desde assinaturas digitais at√© pagamentos recorrentes em lojas f√≠sicas.

O **fluxo de mensagens entre PSPs** ‚Äî especialmente `pain.009`, `pain.012`, `pain.013`, `camt.054` e `camt.055` ‚Äî √© o cora√ß√£o do sistema, garantindo **integridade, seguran√ßa e transpar√™ncia**.

Este documento √© a **refer√™ncia definitiva** para qualquer institui√ß√£o que deseje implementar ou auditar o Pix Autom√°tico com excel√™ncia.

---

Se desejar, posso:
- Gerar um **documento Word ou PDF real**
- Criar um **dashboard de monitoramento**
- Fornecer **scripts de valida√ß√£o de mensagens**
- Simular **cen√°rios de erro e tratamento**

Deseja algum desses artefatos?

### USER
Voc√™ poderia gerar os casos de teste das jornadas no padr√£o gherkin ?n√£o economize tokens

### ASSISTANT
Com base no **Guia de Implementa√ß√£o do Pix Autom√°tico (vers√£o 1.2)** e no conte√∫do detalhado do arquivo fornecido, apresento abaixo um conjunto completo de **casos de teste escritos em Gherkin**, o padr√£o da linguagem **Cucumber/BDD (Behavior-Driven Development)**.

Esses cen√°rios cobrem as **quatro jornadas de autoriza√ß√£o**, al√©m de fluxos cr√≠ticos como **agendamento, liquida√ß√£o, falhas, cancelamentos, retentativas, notifica√ß√µes e regras de valida√ß√£o**.

Os testes foram estruturados com foco em **comportamento esperado**, **valida√ß√µes obrigat√≥rias**, **mensagens do SPI (pain.009, pain.012, pain.013, camt.054, etc.)**, e **regras de neg√≥cio definidas pelo BC**.

---

# üìò **Casos de Teste do Pix Autom√°tico ‚Äì Padr√£o Gherkin**

> **Baseado no Guia de Implementa√ß√£o do Pix Autom√°tico v1.2**
>
> **Objetivo**: Validar o comportamento esperado dos PSPs (pagador e recebedor) nas jornadas de autoriza√ß√£o, agendamento, liquida√ß√£o e gest√£o.

---

## üß© **1. Jornada 1: Autoriza√ß√£o sem QR Code, com notifica√ß√£o via app**

### **Feature: Jornada 1 - Autoriza√ß√£o via notifica√ß√£o (pain.009 ‚Üí pain.012)**

```gherkin
Feature: Jornada 1 - Autoriza√ß√£o sem QR Code
  Como um usu√°rio recebedor
  Quero que meu PSP envie uma solicita√ß√£o de autoriza√ß√£o para o PSP do pagador
  Para que o usu√°rio pagador possa confirmar a recorr√™ncia via notifica√ß√£o no app

  @jornada1 @autorizacao @pain009
  Scenario: Pagador confirma a autoriza√ß√£o ap√≥s receber notifica√ß√£o
    Given o usu√°rio recebedor criou uma recorr√™ncia com os seguintes dados:
      | idRecorrencia        | RR123456782025030100001 |
      | formaDeIniciacao     | AUTO                    |
      | valor                | 100.00                  |
      | periodicidade        | MENSAL                  |
      | dataInicio           | 2025-03-01              |
      | dataFim              | 2026-03-01              |
      | descricao            | Assinatura Premium      |
      | idObjetoCobranca     | ASS12345                |
      | politicaRetentativa  | S                       |
    And o PSP recebedor enviou uma mensagem pain.009 ao PSP pagador
    When o PSP pagador recebe a pain.009
    Then deve notificar o usu√°rio pagador via app: "Autorizar recorr√™ncia de R$100,00?"
    And o usu√°rio pagador confirma a autoriza√ß√£o com autentica√ß√£o biom√©trica
    And o PSP pagador envia uma pain.012 com status = true ao PSP recebedor
    And o PSP recebedor atualiza o status da recorr√™ncia para "aprovada"
    And o usu√°rio recebedor √© informado da confirma√ß√£o da autoriza√ß√£o

  @jornada1 @rejeicao @pain012
  Scenario: Pagador rejeita a autoriza√ß√£o
    Given o PSP recebedor enviou uma pain.009 ao PSP pagador
    When o PSP pagador recebe a pain.009
    Then notifica o usu√°rio pagador
    And o usu√°rio pagador rejeita a autoriza√ß√£o
    And o PSP pagador N√ÉO envia nenhuma mensagem ao PSP recebedor
    And o status da recorr√™ncia permanece "pendente"

  @jornada1 @validacao @prazo
  Scenario: Recorr√™ncia com data de in√≠cio anterior √† expira√ß√£o da solicita√ß√£o de confirma√ß√£o
    Given o usu√°rio recebedor define:
      | dataInicio           | 2025-03-01              |
      | dataExpiracaoSolicitacao | 2025-02-28            |
    When tenta criar a recorr√™ncia
    Then o sistema deve alertar: "A data de in√≠cio n√£o pode ser anterior √† data de expira√ß√£o da solicita√ß√£o de confirma√ß√£o"
    And a recorr√™ncia N√ÉO deve ser criada

  @jornada1 @codMunIBGE
  Scenario: PSP pagador n√£o conhece o codMunIBGE do usu√°rio pagador
    Given o PSP pagador confirma a autoriza√ß√£o
    When envia a pain.012 ao PSP recebedor
    Then o campo codMunIBGE deve ser preenchido com "0000000"
    And a autoriza√ß√£o deve ser aceita pelo PSP recebedor
```

---

## üß© **2. Jornada 2: Autoriza√ß√£o com QR Code contendo apenas dados da recorr√™ncia**

### **Feature: Jornada 2 - Autoriza√ß√£o via QR Code (s√≥ recorr√™ncia)**

```gherkin
Feature: Jornada 2 - QR Code com dados da recorr√™ncia
  Como um usu√°rio pagador
  Quero ler um QR Code com dados de recorr√™ncia
  Para que eu possa autorizar o Pix Autom√°tico diretamente no app

  @jornada2 @qr @pain012
  Scenario: Pagador l√™ QR Code e confirma autoriza√ß√£o
    Given o usu√°rio recebedor gerou um QR Code com:
      | faixa 26-51 | preenchida (marca√ß√£o de aus√™ncia de cobran√ßa) |
      | faixa 80-99 | location para /rec/RR123456782025030100001   |
    And o PSP recebedor armazenou os dados da recorr√™ncia
    When o usu√°rio pagador l√™ o QR Code com o app do PSP pagador
    Then o app deve acessar o endpoint GET /pix/v2/rec/RR123456782025030100001
    And o PSP recebedor retorna os dados da recorr√™ncia
    And o app exibe: "Autorizar pagamento recorrente de R$100,00 mensais?"
    And o usu√°rio pagador confirma com senha
    And o PSP pagador envia pain.012 com status = true ao PSP recebedor
    And o PSP recebedor atualiza o status para "aprovada"

  @jornada2 @qr @erro @sem_pain012
  Scenario: Falha ao obter dados da recorr√™ncia via QR Code
    Given o QR Code aponta para um txid inv√°lido
    When o usu√°rio pagador l√™ o QR Code
    Then o PSP pagador n√£o consegue acessar GET /rec/{txid}
    And o app informa: "N√£o foi poss√≠vel carregar os dados da recorr√™ncia"
    And NENHUMA mensagem pain.012 √© enviada ao PSP recebedor
    And a autoriza√ß√£o N√ÉO √© registrada

  @jornada2 @faixas_qr
  Scenario: QR Code com apenas dados da recorr√™ncia deve preencher faixa 26-51
    Given o usu√°rio recebedor gera um QR Code com dados da recorr√™ncia
    When a faixa 26-51 N√ÉO √© preenchida
    Then o QR Code √© considerado inv√°lido
    And o PSP pagador deve rejeitar a leitura
    And exibir mensagem: "QR Code inv√°lido para Pix Autom√°tico"
```

---

## üß© **3. Jornada 3: Autoriza√ß√£o com QR Code contendo pagamento imediato + recorr√™ncia**

### **Feature: Jornada 3 - Pagamento imediato + autoriza√ß√£o simult√¢nea**

```gherkin
Feature: Jornada 3 - QR Code com pagamento imediato e recorr√™ncia
  Como um usu√°rio pagador
  Quero pagar agora e autorizar recorr√™ncia em um √∫nico passo
  Para agilizar a contrata√ß√£o de servi√ßos

  @jornada3 @qr @pacs008 @pain012
  Scenario: Pagador realiza pagamento imediato e autoriza recorr√™ncia
    Given o QR Code cont√©m:
      | faixa 26-51 | location para cobran√ßa imediata |
      | faixa 80-99 | location para recorr√™ncia       |
    When o usu√°rio pagador l√™ o QR Code
    Then o app busca:
      | GET /cobv/{txid_imediato} |
      | GET /rec/{txid_recorrente} |
    And ambos os payloads s√£o v√°lidos
    And o app exibe:
      | Pagamento imediato: R$50,00 |
      | Autorizar recorr√™ncia: R$100,00 mensais? [‚úì] |
    When o usu√°rio confirma
    Then o PSP pagador inicia o pagamento imediato (pacs.008)
    And AP√ìS a liquida√ß√£o bem-sucedida, envia pain.012 com status = true
    And o PSP recebedor confirma a autoriza√ß√£o

  @jornada3 @erro @falha_pagamento
  Scenario: Falha no pagamento imediato impede autoriza√ß√£o
    Given o pagamento imediato falha por saldo insuficiente
    When o usu√°rio confirma no app
    Then o PSP pagador N√ÉO envia pain.012
    And o app informa: "Pagamento n√£o realizado. Autoriza√ß√£o de recorr√™ncia cancelada."
    And a recorr√™ncia permanece n√£o autorizada

  @jornada3 @erro @payload_invalido
  Scenario: Um dos payloads (cobran√ßa ou recorr√™ncia) √© inv√°lido
    Given o payload da cobran√ßa imediata √© inv√°lido
    When o usu√°rio l√™ o QR Code
    Then o PSP pagador interrompe o processo
    And informa: "Cobran√ßa inv√°lida. Opera√ß√£o cancelada."
    And NENHUMA a√ß√£o de autoriza√ß√£o √© iniciada
```

---

## üß© **4. Jornada 4: Autoriza√ß√£o ap√≥s pagamento/agendamento com vencimento**

### **Feature: Jornada 4 - Oferta p√≥s-pagamento**

```gherkin
Feature: Jornada 4 - Oferta de Pix Autom√°tico ap√≥s pagamento
  Como um usu√°rio pagador
  Quero pagar uma cobran√ßa com vencimento e depois decidir se autorizo recorr√™ncia
  Para ter controle sobre a ades√£o

  @jornada4 @qr @post_pagemento @pain012
  Scenario: Pagador paga e aceita oferta de Pix Autom√°tico
    Given o QR Code cont√©m cobran√ßa com vencimento e dados de recorr√™ncia
    When o usu√°rio pagador l√™ o QR Code e paga com sucesso
    Then o PSP pagador conclui o pagamento (pacs.008)
    And exibe: "Quer autorizar pagamentos recorrentes para este servi√ßo? [Sim] [N√£o]"
    When o usu√°rio clica em "Sim"
    Then o PSP pagador envia pain.012 com status = true ao PSP recebedor
    And o PSP recebedor confirma a autoriza√ß√£o

  @jornada4 @erro @falha_pagamento
  Scenario: Falha no pagamento impede oferta de Pix Autom√°tico
    Given o pagamento falha por erro de autentica√ß√£o
    When o usu√°rio tenta pagar
    Then o PSP pagador N√ÉO oferece a op√ß√£o de Pix Autom√°tico
    And o app informa apenas o erro do pagamento

  @jornada4 @recusa
  Scenario: Pagador recusa a oferta de Pix Autom√°tico
    Given o pagamento foi bem-sucedido
    When o PSP pagador oferece a op√ß√£o de autoriza√ß√£o
    And o usu√°rio clica em "N√£o"
    Then o PSP pagador N√ÉO envia pain.012
    And a recorr√™ncia n√£o √© autorizada
    And o usu√°rio pode pagar futuras cobran√ßas manualmente
```

---

## üß© **5. Agendamento e Liquida√ß√£o**

### **Feature: Agendamento de d√©bito via pain.013**

```gherkin
Feature: Agendamento de d√©bito recorrente
  Como PSP recebedor
  Quero enviar uma instru√ß√£o de pagamento (pain.013)
  Para que o PSP pagador agende o d√©bito autom√°tico

  @agendamento @pain013 @validacao
  Scenario: Agendamento v√°lido dentro do prazo (entre 2 e 10 dias antes)
    Given a recorr√™ncia est√° autorizada (status = aprovada)
    When o PSP recebedor envia pain.013 com:
      | idFimAFim               | 2025-04-15          |
      | finalidadeDoAgendamento | AGND                |
      | valor                   | 100.00              |
      | dataHoraCriacaoParaEmissao | 2025-04-05T10:00:00 |
    Then o PSP pagador valida:
      | data dentro do prazo (2-10 dias antes) |
      | valor compat√≠vel com autoriza√ß√£o       |
      | recorr√™ncia vigente                    |
    And confirma o agendamento
    And notifica o usu√°rio pagador: "D√©bito agendado para 15/04"

  @agendamento @camt054 @fora_prazo
  Scenario: Agendamento fora do prazo (menos de 2 dias antes)
    Given o PSP recebedor envia pain.013 com idFimAFim = 2025-04-15
    And dataHoraCriacaoParaEmissao = 2025-04-14
    When o PSP pagador recebe
    Then rejeita com camt.054
    And notifica: "Instru√ß√£o fora do prazo. D√©bito n√£o agendado."

  @agendamento @camt054 @valor_incompativel
  Scenario: Valor da cobran√ßa diferente do autorizado (fixo)
    Given a recorr√™ncia autorizada tem valor = 100.00 (fixo)
    When o PSP recebedor envia pain.013 com valor = 120.00
    Then o PSP pagador rejeita com camt.054
    And notifica o usu√°rio pagador: "Valor divergente. D√©bito n√£o agendado."
```

---

## üß© **6. Retentativas: RIFL e NTAG**

### **Feature: Retentativas de pagamento**

```gherkin
Feature: Retentativas ap√≥s falha na liquida√ß√£o
  Como PSP recebedor
  Quero tentar novamente o d√©bito ap√≥s falha
  Para aumentar a taxa de sucesso

  @retentativa @RIFL @pain013
  Scenario: Nova tentativa intradi√°ria (RIFL)
    Given o d√©bito de 15/04 falhou por saldo insuficiente
    When o PSP recebedor envia nova pain.013 com:
      | finalidadeDoAgendamento | RIFL |
      | idFimAFim               | 2025-04-15 |
    Then o PSP pagador aceita SEM validar valor m√°ximo ou autoriza√ß√£o
    And tenta novamente o d√©bito
    And notifica o usu√°rio pagador

  @retentativa @NTAG @cancelamento
  Scenario: NTAG n√£o pode ser cancelada pelo pagador
    Given o PSP recebedor enviou pain.013 com finalidadeDoAgendamento = NTAG
    And o agendamento est√° ativo
    When o usu√°rio pagador tenta cancelar no app
    Then o sistema deve bloquear: "Agendamentos de retentativa n√£o podem ser cancelados pelo usu√°rio"
```

---

## üß© **7. Cancelamento e Altera√ß√£o**

### **Feature: Cancelamento de cobran√ßa agendada**

```gherkin
Feature: Cancelamento de cobran√ßa agendada
  Como usu√°rio recebedor
  Quero cancelar uma cobran√ßa agendada
  Para corrigir erros

  @cancelamento @recebedor @apos_22h
  Scenario: Recebedor tenta cancelar ap√≥s 22h do dia anterior
    Given a data prevista para liquida√ß√£o √© 2025-04-15
    When o recebedor solicita cancelamento em 2025-04-14 √†s 22:30
    Then o PSP recebedor deve rejeitar o cancelamento
    And informar: "Cancelamento n√£o permitido ap√≥s 22h do dia anterior."

  @cancelamento @pagador @qualquer_momento
  Scenario: Pagador cancela autoriza√ß√£o a qualquer momento
    Given a recorr√™ncia est√° ativa
    When o usu√°rio pagador cancela no app
    Then o PSP pagador invalida a autoriza√ß√£o
    And notifica o PSP recebedor via mensageria
    And o usu√°rio recebedor √© informado
```

---

## üß© **8. Open Finance e PSI**

### **Feature: Autoriza√ß√£o via PSI (Open Finance)**

```gherkin
Feature: Autoriza√ß√£o via PSI no Open Finance
  Como usu√°rio pagador
  Quero autorizar um PSI a gerenciar minhas recorr√™ncias
  Para automatizar pagamentos

  @openfinance @PSI @consentimento
  Scenario: Consentimento v√°lido permite autoriza√ß√£o autom√°tica
    Given o usu√°rio pagador concedeu consentimento ao PSI
    And o consentimento inclui:
      | idRecorrencia | CR123456782025030100001 |
      | valorMaximo   | 200.00                  |
      | validade      | 2026-03-01              |
    When o PSI inicia a autoriza√ß√£o
    Then o PSP pagador valida o consentimento
    And armazena o valor m√°ximo
    And envia pain.012 com status = true
    And o PSP recebedor confirma
```

---

## üß© **9. MED (Devolu√ß√£o)**

### **Feature: Devolu√ß√£o via MED**

```gherkin
Feature: Solicita√ß√£o de devolu√ß√£o por suspeita de fraude
  Como usu√°rio pagador
  Quero devolver um pagamento do Pix Autom√°tico
  Por suspeita de fraude

  @MED @devolucao
  Scenario: Pagador solicita MED dentro de 90 dias
    Given o pagamento foi liquidado em 2025-01-10
    When o usu√°rio pagador solicita MED em 2025-03-20
    Then o PSP pagador deve devolver os recursos em at√© 24h
    And gerar comprovante de devolu√ß√£o
    And iniciar processo de ressarcimento via DICT
```

---

## üìå **Conclus√£o**

Este conjunto de **casos de teste em Gherkin** cobre:

- ‚úÖ **Todas as 4 jornadas de autoriza√ß√£o**
- ‚úÖ **Fluxos de sucesso e falha**
- ‚úÖ **Valida√ß√µes obrigat√≥rias (prazo, valor, CNPJ, faixas do QR)**
- ‚úÖ **Mensagens do SPI (pain.009, pain.012, pain.013, camt.054, etc.)**
- ‚úÖ **Retentativas (RIFL e NTAG)**
- ‚úÖ **Cancelamentos (pagador e recebedor)**
- ‚úÖ **Open Finance / PSI**
- ‚úÖ **MED (devolu√ß√£o)**

Esses cen√°rios podem ser usados diretamente em frameworks como **Cucumber**, **Behave (Python)**, **SpecFlow (.NET)**, ou **JBehave (Java)** para automa√ß√£o de testes funcionais e de conformidade com o regulamento do BC.

---

Se desejar, posso gerar:
- Um **arquivo `.feature` completo** para download
- Um **relat√≥rio de cobertura de requisitos**
- Um **script de automa√ß√£o em Python + Selenium**
- Um **dashboard de execu√ß√£o de testes**

Deseja algum desses artefatos?

### USER
Crie os cen√°rios das jornadas do contexto do recebedor em portugu√™s e n√£o economize tokens na resposta 

### ASSISTANT
Com base no **Guia de Implementa√ß√£o do Pix Autom√°tico (vers√£o 1.2)** e no conte√∫do fornecido no arquivo `guia_pix_automatico.pdf`, apresento abaixo uma **an√°lise completa e detalhada das jornadas de autoriza√ß√£o do Pix Autom√°tico**, com foco no **contexto do usu√°rio recebedor**.

Cada jornada √© descrita com **cen√°rios realistas, passo a passo**, destacando as **a√ß√µes do recebedor**, as **intera√ß√µes com o PSP recebedor**, as **responsabilidades operacionais**, os **fluxos de sucesso e falha**, e as **melhores pr√°ticas** para implementa√ß√£o.

Este documento √© uma **refer√™ncia estrat√©gica e operacional** para recebedores (pessoas jur√≠dicas, prestadores de servi√ßos, empresas de cobran√ßa), seus gestores financeiros e equipes de tecnologia.

---

# üìò **Jornadas do Pix Autom√°tico: Vis√£o do Recebedor**

> **Baseado no Guia de Implementa√ß√£o do Pix Autom√°tico ‚Äì Vers√£o 1.2**  
> **Foco: A√ß√µes, decis√µes e responsabilidades do usu√°rio recebedor**

---

## üîç **1. Introdu√ß√£o: O Papel do Recebedor no Pix Autom√°tico**

O **usu√°rio recebedor** √© o **iniciador do processo** de recorr√™ncia. Ele define os termos da cobran√ßa, escolhe a jornada de autoriza√ß√£o mais adequada ao seu modelo de neg√≥cio e interage com seu **PSP recebedor** (seu banco ou institui√ß√£o de pagamento) para criar, gerir e acompanhar as recorr√™ncias.

O recebedor pode:
- Ofertar o Pix Autom√°tico como forma de pagamento.
- Escolher entre **4 jornadas de autoriza√ß√£o**.
- Gerir recorr√™ncias via **API Pix** ou **arquivo padronizado**.
- Reutilizar QR Codes.
- Oferecer autoriza√ß√£o ap√≥s um pagamento inicial.
- Cancelar cobran√ßas agendadas (com restri√ß√µes).
- Receber notifica√ß√µes de sucesso, falha e cancelamento.

Este guia detalha cada jornada sob a **perspectiva do recebedor**, com **cen√°rios completos**, **fluxos operacionais** e **recomenda√ß√µes pr√°ticas**.

---

## üü¶ **Jornada 1: Autoriza√ß√£o sem QR Code, com notifica√ß√£o via app**

### **Contexto**
O usu√°rio pagador entra em contato diretamente com o recebedor (por WhatsApp, liga√ß√£o, e-mail) e informa que deseja pagar por **Pix Autom√°tico**.

Esta jornada √© ideal para:
- Relacionamentos B2B com poucos clientes.
- Cobran√ßas de alto valor.
- Empresas com atendimento personalizado.
- Casos em que o pagador j√° confia na empresa.

---

### **Cen√°rio 1.1: Cria√ß√£o e envio da solicita√ß√£o de autoriza√ß√£o**

**Como** recebedor de uma academia premium,  
**Quero** solicitar autoriza√ß√£o de Pix Autom√°tico a um novo aluno via notifica√ß√£o no app,  
**Para que** ele possa confirmar a mensalidade recorrente sem precisar escanear QR Code.

#### **Passo a Passo:**

1. **Acesso ao sistema do PSP recebedor**
   - O respons√°vel financeiro da academia acessa a plataforma do PSP (ex: internet banking corporativo ou painel de cobran√ßa).

2. **Cria√ß√£o da recorr√™ncia**
   - Informa os dados:
     - `idRecorrencia`: `RR123456782025030100001`
     - `formaDeIniciacao`: `AUTO`
     - `valor`: `299,90` (fixo)
     - `periodicidade`: `MENSAL`
     - `dataInicio`: `2025-04-15`
     - `dataFim`: `2026-04-15`
     - `descricao`: "Mensalidade Academia Premium"
     - `idObjetoCobranca`: `ACAD12345`
     - `politicaRetentativa`: `S` (permite retentativas p√≥s-vencimento)
   - Define `dataExpiracaoSolicitacao`: `2025-04-10` (5 dias antes do primeiro pagamento).

3. **Envio da solicita√ß√£o**
   - Clica em ‚ÄúEnviar para autoriza√ß√£o‚Äù.
   - O PSP recebedor valida os dados e envia uma mensagem `pain.009` ao **PSP pagador** do aluno.

4. **Notifica√ß√£o ao pagador**
   - O PSP pagador recebe a `pain.009`.
   - Notifica o aluno no app:  
     > ‚ÄúVoc√™ foi convidado a autorizar um pagamento recorrente de R$299,90/m√™s para Academia Premium. Deseja confirmar?‚Äù

5. **Confirma√ß√£o pelo pagador**
   - O aluno abre o app, confirma com biometria e autoriza.

6. **Retorno ao recebedor**
   - O PSP pagador envia `pain.012` com `status = true`.
   - O PSP recebedor atualiza o status da recorr√™ncia para **‚Äúconfirmada‚Äù**.
   - O sistema da academia √© notificado:  
     > ‚ÄúAutoriza√ß√£o de Pix Autom√°tico confirmada para o aluno ACAD12345.‚Äù

7. **Agendamento**
   - Em `2025-04-05` (10 dias antes), o PSP recebedor envia `pain.013` com `idFimAFim = 20250415`.
   - O d√©bito ser√° liquidado entre 0h e 8h do dia 15/04.

#### **Boas Pr√°ticas para o Recebedor:**
- Defina `dataExpiracaoSolicitacao` com anteced√™ncia suficiente.
- Monitore o status da recorr√™ncia (‚Äúpendente‚Äù ‚Üí ‚Äúconfirmada‚Äù).
- Se o pagador n√£o confirmar, voc√™ pode reenviar a solicita√ß√£o com nova `dataExpiracao`.

---

### **Cen√°rio 1.2: Falha na autoriza√ß√£o**

**Como** recebedor,  
**Quero** saber o que fazer se o pagador n√£o confirmar a autoriza√ß√£o,  
**Para que** eu possa tomar uma a√ß√£o alternativa.

#### **Fluxo:**
- O PSP pagador **n√£o envia `pain.012`**.
- A recorr√™ncia permanece em **‚Äúpendente de confirma√ß√£o‚Äù**.
- Ap√≥s `2025-04-10`, a solicita√ß√£o expira.
- O sistema do PSP recebedor notifica:  
  > ‚ÄúSolicita√ß√£o de autoriza√ß√£o expirada. Recorr√™ncia RR123456782025030100001 n√£o foi confirmada.‚Äù

#### **A√ß√µes do Recebedor:**
1. Contatar o pagador por outro canal.
2. Tentar novamente com nova `dataExpiracao`.
3. Oferecer outra jornada (ex: Jornada 4 ap√≥s pr√≥ximo pagamento).

---

## üü® **Jornada 2: Autoriza√ß√£o com QR Code contendo apenas os dados da recorr√™ncia**

### **Contexto**
O recebedor disponibiliza um **QR Code fixo** (impresso ou digital) que aponta apenas para os dados da recorr√™ncia.

Ideal para:
- Academias, cl√≠nicas, assinaturas f√≠sicas.
- Reutiliza√ß√£o de QR Codes.
- Ambientes com m√∫ltiplos pagadores (ex: recep√ß√£o).

---

### **Cen√°rio 2.1: Reutiliza√ß√£o de QR Code em academia**

**Como** recebedor de uma academia com 500 alunos,  
**Quero** usar um √∫nico QR Code impresso na recep√ß√£o para todos os novos alunos,  
**Para que** cada um possa autorizar sua mensalidade recorrente.

#### **Passo a Passo:**

1. **Cria√ß√£o da recorr√™ncia**
   - O PSP recebedor cria uma recorr√™ncia com:
     - `idRecorrencia`: `RR234567892025030100002`
     - `valor`: `299,90`
     - `periodicidade`: `MENSAL`
     - `dataInicio`: `2025-04-01`
     - `dataFim`: `2026-04-01`
     - `descricao`: "Mensalidade Academia"
     - `idObjetoCobranca`: `NOVO_ALUNO`
   - Gera um `location` (ex: `https://pix.bcb.gov.br/api/v2/rec/RR234567892025030100002`).

2. **Gera√ß√£o do QR Code**
   - O sistema gera um QR Code com:
     - **Faixa 26-51**: preenchida (marca√ß√£o de aus√™ncia de cobran√ßa imediata).
     - **Faixa 80-99**: `location` da recorr√™ncia.
   - Imprime o QR Code e o coloca na recep√ß√£o.

3. **Aluno l√™ o QR Code**
   - O novo aluno abre o app do banco e l√™ o QR Code.
   - O app acessa `GET /pix/v2/rec/RR234567892025030100002`.
   - Exibe:  
     > ‚ÄúAutorizar pagamento recorrente de R$299,90/m√™s para Academia XYZ?‚Äù

4. **Confirma√ß√£o**
   - O aluno confirma com senha.
   - O PSP pagador envia `pain.012` com `status = true`.

5. **Atualiza√ß√£o no sistema do recebedor**
   - O PSP recebedor atualiza o status para **‚Äúconfirmada‚Äù**.
   - O sistema da academia recebe a notifica√ß√£o.
   - O funcion√°rio altera o `idObjetoCobranca` para o c√≥digo do aluno (ex: `ALUNO789`).

6. **Reutiliza√ß√£o**
   - O **mesmo QR Code** continua v√°lido.
   - O pr√≥ximo aluno l√™, confirma, e o processo se repete.

#### **Boas Pr√°ticas para o Recebedor:**
- Use QR Codes com **faixa 26-51 preenchida** para compatibilidade.
- Atualize o `idObjetoCobranca` ap√≥s cada confirma√ß√£o.
- N√£o envie `pain.009` ‚Äî a autoriza√ß√£o √© iniciada pelo QR Code.

---

### **Cen√°rio 2.2: QR Code com dados inv√°lidos**

**Como** recebedor,  
**Quero** saber o que acontece se o QR Code estiver corrompido,  
**Para que** eu possa corrigir rapidamente.

#### **Fluxo:**
- O aluno l√™ o QR Code.
- O app tenta acessar `GET /rec/{txid}`.
- Retorna erro 404 (recorr√™ncia n√£o encontrada).
- O app exibe: ‚ÄúN√£o foi poss√≠vel carregar os dados da recorr√™ncia.‚Äù
- **Nenhuma `pain.012` √© enviada.**
- O recebedor **n√£o √© notificado**.

#### **A√ß√£o do Recebedor:**
- Verificar se a recorr√™ncia ainda est√° ativa.
- Regerar o `location` e o QR Code se necess√°rio.

---

## üü• **Jornada 3: Autoriza√ß√£o com QR Code contendo pagamento imediato + recorr√™ncia**

### **Contexto**
O recebedor oferece um **QR Code composto** que inclui:
- Uma **cobran√ßa imediata** (primeiro pagamento).
- Uma **recorr√™ncia** (pagamentos futuros).

A aceita√ß√£o do pagamento imediato **implica automaticamente** na autoriza√ß√£o do Pix Autom√°tico.

Ideal para:
- Assinaturas digitais.
- Vendas online.
- Servi√ßos com entrada + mensalidades.

---

### **Cen√°rio 3.1: Assinatura de streaming com entrada**

**Como** recebedor de uma plataforma de streaming,  
**Quero** que o cliente pague a primeira mensalidade e autorize automaticamente as futuras,  
**Para que** o processo seja r√°pido e seguro.

#### **Passo a Passo:**

1. **Cria√ß√£o da cobran√ßa imediata e recorr√™ncia**
   - Cria cobran√ßa imediata:
     - `txid`: `TXID123`
     - `valor`: `29,90`
     - `location`: `https://pix.bcb.gov.br/api/v2/cobv/TXID123`
   - Cria recorr√™ncia:
     - `idRecorrencia`: `RR345678902025030100003`
     - `valor`: `29,90`
     - `periodicidade`: `MENSAL`
     - `dataInicio`: `2025-05-01`
     - `location`: `https://pix.bcb.gov.br/api/v2/rec/RR345678902025030100003`

2. **Gera√ß√£o do QR Code composto**
   - QR Code com:
     - **Faixa 26-51**: `location` da cobran√ßa imediata.
     - **Faixa 80-99**: `location` da recorr√™ncia.

3. **Cliente l√™ o QR Code**
   - App acessa ambos os `locations`.
   - Exibe:
     - Pagamento imediato: R$29,90
     - Checkbox: ‚ÄúAutorizar Pix Autom√°tico para pr√≥ximas mensalidades? [‚úì]‚Äù
   - **N√£o √© poss√≠vel desmarcar.**

4. **Confirma√ß√£o**
   - Cliente confirma.
   - PSP pagador inicia o pagamento imediato (`pacs.008`).
   - Ap√≥s sucesso, envia `pain.012` com `status = true`.

5. **Notifica√ß√£o ao recebedor**
   - Recebe confirma√ß√£o da autoriza√ß√£o.
   - Ativa a assinatura.
   - Agendar√° o pr√≥ximo d√©bito em `2025-05-01`.

#### **Regras Cr√≠ticas:**
- **N√£o pode haver dissocia√ß√£o** entre pagamento e autoriza√ß√£o.
- Se o pagamento falhar, **n√£o h√° autoriza√ß√£o**.
- O pagamento imediato aparece como **Pix normal** no extrato.

---

### **Cen√°rio 3.2: Falha no pagamento imediato**

**Como** recebedor,  
**Quero** entender o impacto de uma falha no pagamento inicial,  
**Para que** eu saiba que n√£o haver√° autoriza√ß√£o.

#### **Fluxo:**
- Cliente confirma.
- Pagamento imediato falha por saldo insuficiente.
- PSP pagador **n√£o envia `pain.012`**.
- Recorr√™ncia permanece n√£o autorizada.
- Recebedor n√£o √© notificado de autoriza√ß√£o.

#### **A√ß√£o do Recebedor:**
- Oferecer outra forma de pagamento.
- Tentar novamente com novo QR Code.

---

## üüß **Jornada 4: Autoriza√ß√£o ap√≥s pagamento/agendamento com vencimento**

### **Contexto**
O recebedor oferece o Pix Autom√°tico **ap√≥s** o cliente pagar ou agendar uma cobran√ßa com vencimento.

A autoriza√ß√£o √© **opcional** e ocorre **ap√≥s o pagamento inicial**.

Ideal para:
- Faturas de energia, √°gua, boletos.
- Clientes que j√° pagam manualmente.
- Migra√ß√£o de pagadores para autom√°tico.

---

### **Cen√°rio 4.1: Oferta p√≥s-pagamento de fatura de energia**

**Como** recebedor de uma concession√°ria de energia,  
**Quero** oferecer Pix Autom√°tico ap√≥s o cliente pagar a fatura,  
**Para que** ele n√£o precise mais se preocupar com vencimentos.

#### **Passo a Passo:**

1. **Gera√ß√£o do QR Code composto**
   - Cobran√ßa com vencimento:
     - `txid`: `FAT123`
     - `valor`: `150,00`
     - `dataDeVencimento`: `2025-04-10`
     - `location`: `https://pix.bcb.gov.br/api/v2/cobv/FAT123`
   - Recorr√™ncia:
     - `idRecorrencia`: `RR456789012025030100004`
     - `valor`: `150,00` (m√©dio)
     - `periodicidade`: `MENSAL`
     - `location`: `https://pix.bcb.gov.br/api/v2/rec/RR456789012025030100004`

2. **Cliente paga a fatura**
   - L√™ o QR Code.
   - Paga R$150,00 via Pix (com vencimento ou n√£o).

3. **Oferta de Pix Autom√°tico**
   - Ap√≥s o pagamento, o app do PSP pagador exibe:
     > ‚ÄúQuer autorizar pagamentos autom√°ticos mensais de at√© R$150,00 para Energia S.A.? [Sim] [N√£o]‚Äù

4. **Aceita√ß√£o**
   - Cliente clica em ‚ÄúSim‚Äù.
   - PSP pagador envia `pain.012` com `status = true`.

5. **Ativa√ß√£o**
   - PSP recebedor confirma.
   - Pr√≥xima fatura ser√° debitada automaticamente em `2025-05-10`.

#### **Regras:**
- A oferta **s√≥ √© feita ap√≥s o pagamento bem-sucedido**.
- Se o pagamento falhar, **n√£o h√° oferta**.
- O cliente pode **recusar** a autoriza√ß√£o.

---

### **Cen√°rio 4.2: Cliente recusa a oferta**

**Como** recebedor,  
**Quero** saber o que acontece se o cliente recusar,  
**Para que** eu possa continuar ofertando manualmente.

#### **Fluxo:**
- Cliente clica em ‚ÄúN√£o‚Äù.
- PSP pagador **n√£o envia `pain.012`**.
- Recorr√™ncia **n√£o √© autorizada**.
- Recebedor **n√£o √© notificado**.

#### **A√ß√£o do Recebedor:**
- Continuar ofertando via Jornada 1 ou 2.
- Enviar e-mail com QR Code da Jornada 2.

---

## üîÑ **5. Gest√£o Cont√≠nua da Recorr√™ncia (todas as jornadas)**

### **Altera√ß√µes na Recorr√™ncia**
- **Antes da confirma√ß√£o**: Pode alterar `valor`, `periodicidade`, `dataInicio`.
- **Ap√≥s a confirma√ß√£o**: **N√£o pode alterar**. Deve:
  1. Cancelar a recorr√™ncia.
  2. Criar uma nova.
  3. Solicitar nova autoriza√ß√£o.

### **Cancelamento**
- **Pelo pagador**: A qualquer momento (at√© v√©spera da liquida√ß√£o).
- **Pelo recebedor**: Pode cancelar cobran√ßa agendada, **mas n√£o ap√≥s 22h do dia anterior**.

### **Retentativas**
- **RIFL**: Nova tentativa intradi√°ria (at√© 23h59).
- **NTAG**: Nova tentativa p√≥s-vencimento (se `politicaRetentativa = S`).
  - **Pagador n√£o pode cancelar** agendamentos com `NTAG`.

---

## üì¢ **6. Notifica√ß√µes Obrigat√≥rias para o Recebedor**

O PSP recebedor **deve informar** o recebedor em:

| Situa√ß√£o | Notifica√ß√£o |
|--------|-------------|
| Sucesso do agendamento | ‚ÄúD√©bito agendado para 15/04‚Äù |
| Falha no agendamento | ‚ÄúValor divergente. D√©bito n√£o agendado.‚Äù |
| Cancelamento pelo pagador | ‚ÄúAutoriza√ß√£o cancelada pelo pagador‚Äù |
| Sucesso no cancelamento da cobran√ßa | ‚ÄúCobran√ßa cancelada com sucesso‚Äù |
| Falha no cancelamento da cobran√ßa | ‚ÄúCancelamento n√£o permitido ap√≥s 22h‚Äù |

---

## üìå **7. Boas Pr√°ticas para o Recebedor**

1. **Escolha a jornada certa**:
   - Jornada 1: Relacionamento direto.
   - Jornada 2: Reutiliza√ß√£o de QR Code.
   - Jornada 3: Entrada + recorr√™ncia.
   - Jornada 4: Migra√ß√£o de pagadores.

2. **Use API Pix ou arquivo padronizado** para escalar.

3. **Monitore o status** das recorr√™ncias: ‚Äúcriada‚Äù, ‚Äúpendente‚Äù, ‚Äúconfirmada‚Äù.

4. **Defina `dataFim` com margem** para retentativas.

5. **Ajuste para dia √∫til** com base no `codMunIBGE` do pagador.

6. **N√£o cobre tarifa do pagador** ‚Äì √© vedado.

7. **Ofere√ßa suporte** para cancelamento e d√∫vidas.

---

## üèÅ **Conclus√£o**

O **recebedor √© o protagonista** do Pix Autom√°tico. Ele define o modelo de neg√≥cio, escolhe a jornada, cria as recorr√™ncias e gerencia o relacionamento com o pagador.

As **quatro jornadas** oferecem flexibilidade para diferentes cen√°rios:
- **Jornada 1**: Relacionamento direto e personalizado.
- **Jornada 2**: Escalabilidade com QR Code reutiliz√°vel.
- **Jornada 3**: Convers√£o imediata com pagamento inicial.
- **Jornada 4**: Migra√ß√£o suave de pagadores manuais.

Com as boas pr√°ticas acima, o recebedor pode **automatizar cobran√ßas**, **reduzir inadimpl√™ncia** e **melhorar a experi√™ncia do cliente**.

---

Se desejar, posso gerar:
- Um **modelo de checklist operacional** para recebedores
- Um **fluxograma em portugu√™s** das jornadas
- Um **template de e-mail** para ofertar Pix Autom√°tico
- Um **relat√≥rio de impacto financeiro** por jornada

Deseja algum desses artefatos?
